{"version":3,"file":"use-files-dragging.js","sourceRoot":"","sources":["../../../src/file-dropzone/use-files-dragging.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE5C;;;;;GAKG;AACH,MAAM,UAAU,gBAAgB;IAC9B,MAAM,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAE7D,4CAA4C;IAC5C,SAAS,CAAC,GAAG,EAAE;QACb,8CAA8C;QAC9C,IAAI,SAAS,GAAyC,IAAI,CAAC;QAE3D,mFAAmF;QACnF,MAAM,kBAAkB,GAAG,CAAC,KAAgB,EAAE,EAAE;;YAC9C,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,CAAA,MAAA,KAAK,CAAC,YAAY,0CAAE,KAAK,CAAC,MAAM,KAAI,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE;gBACzE,IAAI,CAAA,MAAA,KAAK,CAAC,YAAY,0CAAE,KAAK,CAAC,IAAI,CAAC,MAAK,OAAO,EAAE;oBAC/C,KAAK,EAAE,CAAC;iBACT;aACF;YAED,IAAI,KAAK,GAAG,CAAC,EAAE;gBACb,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,SAAS,EAAE;oBACb,YAAY,CAAC,SAAS,CAAC,CAAC;iBACzB;aACF;QACH,CAAC,CAAC;QAEF,iFAAiF;QACjF,MAAM,mBAAmB,GAAG,CAAC,KAAgB,EAAE,EAAE;YAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,qDAAqD;QACrD,MAAM,cAAc,GAAG,CAAC,KAAgB,EAAE,EAAE;YAC1C,KAAK,CAAC,cAAc,EAAE,CAAC;YAEvB,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5D,CAAC,CAAC;QAEF,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAC;QACzC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,kBAAkB,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QACzF,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,mBAAmB,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3F,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,cAAc,EAAE,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;QAEjF,OAAO,GAAG,EAAE;YACV,IAAI,SAAS,EAAE;gBACb,YAAY,CAAC,SAAS,CAAC,CAAC;aACzB;YACD,UAAU,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,EAAE,gBAAgB,EAAE,CAAC;AAC9B,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useState } from 'react';\n\n/**\n * A utility to determine whether or not a file is being currently dragged into the window.\n *\n * @returns An object with the following arguments:\n * `areFilesDragging`: True if a file is being dragged over the current window, false otherwise.\n */\nexport function useFilesDragging() {\n  const [areFilesDragging, setFilesDragging] = useState(false);\n\n  // Registering global drag events listeners.\n  useEffect(() => {\n    // The timer helps avoiding dropzone blinking.\n    let dragTimer: null | ReturnType<typeof setTimeout> = null;\n\n    // The file-upload dropzone is shown when the user drags files over to the browser.\n    const onDocumentDragOver = (event: DragEvent) => {\n      event.preventDefault();\n\n      let files = 0;\n      for (let item = 0; item < (event.dataTransfer?.types.length || 0); item++) {\n        if (event.dataTransfer?.types[item] === 'Files') {\n          files++;\n        }\n      }\n\n      if (files > 0) {\n        setFilesDragging(true);\n        if (dragTimer) {\n          clearTimeout(dragTimer);\n        }\n      }\n    };\n\n    // When the files are no longer dragged over the browser the state must be reset.\n    const onDocumentDragLeave = (event: DragEvent) => {\n      event.preventDefault();\n\n      dragTimer = setTimeout(() => setFilesDragging(false), 25);\n    };\n\n    // If the files were dropped the state must be reset.\n    const onDocumentDrop = (event: DragEvent) => {\n      event.preventDefault();\n\n      dragTimer = setTimeout(() => setFilesDragging(false), 25);\n    };\n\n    const controller = new AbortController();\n    document.addEventListener('dragover', onDocumentDragOver, { signal: controller.signal });\n    document.addEventListener('dragleave', onDocumentDragLeave, { signal: controller.signal });\n    document.addEventListener('drop', onDocumentDrop, { signal: controller.signal });\n\n    return () => {\n      if (dragTimer) {\n        clearTimeout(dragTimer);\n      }\n      controller.abort();\n    };\n  }, []);\n\n  return { areFilesDragging };\n}\n"]}