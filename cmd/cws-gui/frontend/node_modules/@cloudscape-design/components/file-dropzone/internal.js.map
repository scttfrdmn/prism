{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/file-dropzone/internal.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;;AAEtC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACxC,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,EAAE,sBAAsB,EAAE,MAAM,oBAAoB,CAAC;AAI5D,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAC,EAKI;QALJ,EAC3C,QAAQ,EACR,QAAQ,EACR,iBAAiB,OAE8B,EAD5C,SAAS,cAJ+B,6CAK5C,CADa;IAEZ,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChE,MAAM,SAAS,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC;IAE1C,MAAM,UAAU,GAAG,CAAC,KAAsB,EAAE,EAAE;QAC5C,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,KAAK,CAAC,YAAY,EAAE;YACtB,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACzB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;SACxC;IACH,CAAC,CAAC;IAEF,MAAM,WAAW,GAAG,CAAC,KAAsB,EAAE,EAAE;QAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,KAAK,CAAC,YAAY,EAAE;YACtB,KAAK,CAAC,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC;SACxC;IACH,CAAC,CAAC;IAEF,MAAM,MAAM,GAAG,CAAC,KAAsB,EAAE,EAAE;QACxC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAE1B,sBAAsB,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACpF,CAAC,CAAC;IAEF,OAAO,CACL,6CACM,SAAS,IACb,GAAG,EAAE,iBAAiB,EACtB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE;YAChD,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,iBAAiB;SACpC,CAAC,EACF,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,WAAW,EACxB,MAAM,EAAE,MAAM;QAEd,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO,IAAG,QAAQ,CAAO,CAC5C,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getBaseProps } from '../internal/base-component';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component/index.js';\nimport { FileDropzoneProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\nexport default function InternalFileDropzone({\n  onChange,\n  children,\n  __internalRootRef,\n  ...restProps\n}: FileDropzoneProps & InternalBaseComponentProps) {\n  const [isDropzoneHovered, setDropzoneHovered] = useState(false);\n  const baseProps = getBaseProps(restProps);\n\n  const onDragOver = (event: React.DragEvent) => {\n    event.preventDefault();\n\n    if (event.dataTransfer) {\n      setDropzoneHovered(true);\n      event.dataTransfer.dropEffect = 'copy';\n    }\n  };\n\n  const onDragLeave = (event: React.DragEvent) => {\n    event.preventDefault();\n    setDropzoneHovered(false);\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'none';\n    }\n  };\n\n  const onDrop = (event: React.DragEvent) => {\n    event.preventDefault();\n    setDropzoneHovered(false);\n\n    fireNonCancelableEvent(onChange, { value: Array.from(event.dataTransfer.files) });\n  };\n\n  return (\n    <div\n      {...baseProps}\n      ref={__internalRootRef}\n      className={clsx(baseProps.className, styles.root, {\n        [styles.hovered]: isDropzoneHovered,\n      })}\n      onDragOver={onDragOver}\n      onDragLeave={onDragLeave}\n      onDrop={onDrop}\n    >\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n}\n"]}