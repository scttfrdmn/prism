// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { useEffect } from 'react';
import { GIT_SHA, PACKAGE_VERSION, THEME } from '../../environment';
import { metrics } from '../../metrics';
export function checkMissingStyles(ownerDocument) {
    const result = getComputedStyle(ownerDocument.body).getPropertyValue(`--awsui-version-info-${GIT_SHA}`);
    if (!result) {
        console.error(`Missing AWS-UI CSS for theme "${THEME}", version "${PACKAGE_VERSION}", and git sha "${GIT_SHA}".`);
        metrics.sendOpsMetricObject('awsui-missing-css-asset', {});
    }
}
export function idleWithDelay(cb) {
    // if idle callbacks not supported, we simply do not collect the metric
    if (typeof requestIdleCallback !== 'function') {
        return;
    }
    let aborted = false;
    setTimeout(() => {
        if (aborted) {
            return;
        }
        requestIdleCallback(() => {
            if (aborted) {
                return;
            }
            cb();
        });
    }, 1000);
    return () => {
        aborted = true;
    };
}
const checkedDocs = new WeakMap();
const checkMissingStylesOnce = (elementRef) => {
    var _a, _b;
    const ownerDocument = (_b = (_a = elementRef.current) === null || _a === void 0 ? void 0 : _a.ownerDocument) !== null && _b !== void 0 ? _b : document;
    const checked = checkedDocs.get(ownerDocument);
    if (!checked) {
        checkMissingStyles(ownerDocument);
        checkedDocs.set(ownerDocument, true);
    }
};
export function useMissingStylesCheck(elementRef) {
    useEffect(() => {
        return idleWithDelay(() => checkMissingStylesOnce(elementRef));
    }, [elementRef]);
}
//# sourceMappingURL=styles-check.js.map