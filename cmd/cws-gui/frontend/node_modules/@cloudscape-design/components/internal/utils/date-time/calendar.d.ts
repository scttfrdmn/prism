import { DayIndex } from '../locale';
export declare function getCalendarYear(date: Date): Date[][];
export interface CalendarDate {
  /**
   * could represent one day or or one complete month depending on the type of calendar
   */
  date: Date;
  isVisible: boolean;
  isSelected: boolean;
  isInRange: boolean;
  isSelectionTop: boolean;
  isSelectionBottom: boolean;
  isSelectionLeft: boolean;
  isSelectionRight: boolean;
}
export interface CalendarWeek {
  days: CalendarDate[];
  testIndex?: number;
}
export interface CalendarQuarter {
  months: CalendarDate[];
}
export declare class MonthCalendar {
  padDates: 'before' | 'after';
  weekdays: number[];
  weeks: CalendarWeek[];
  range: [Date, Date];
  constructor({
    padDates,
    baseDate,
    startOfWeek,
    selection
  }: {
    padDates: 'before' | 'after';
    baseDate: Date;
    startOfWeek: DayIndex;
    selection: null | [Date, Date];
  });
}
export declare class YearCalendar {
  quarters: CalendarQuarter[];
  range: [Date, Date];
  constructor({
    baseDate,
    selection
  }: {
    baseDate: Date;
    selection: null | [Date, Date];
  });
}
export declare function getCalendarMonthWithSixRows(date: Date, {
  startOfWeek,
  padDates
}: {
  startOfWeek: DayIndex;
  padDates: 'before' | 'after';
}): Date[][];
export declare function getCurrentMonthRows(date: Date, firstDayOfWeek: DayIndex): Date[][];
export declare function getPrevMonthRows(date: Date, firstDayOfWeek: DayIndex): Date[][];
export declare function getNextMonthRows(date: Date, firstDayOfWeek: DayIndex): Date[][];