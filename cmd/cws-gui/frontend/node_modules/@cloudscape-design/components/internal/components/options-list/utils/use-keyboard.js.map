{"version":3,"file":"use-keyboard.js","sourceRoot":"","sources":["../../../../../../src/internal/components/options-list/utils/use-keyboard.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAE3C,MAAM,IAAI,GAAG,EAAE,CAAC;AAChB,MAAM,GAAG,GAAG,EAAE,CAAC;AAcf,MAAM,CAAC,MAAM,eAAe,GAAoB,CAAC,EAC/C,IAAI,EACJ,MAAM,EACN,YAAY,EACZ,MAAM,EACN,KAAK,EACL,aAAa,EACb,kBAAkB,GAAG,KAAK,GAC3B,EAAE,EAAE;IACH,OAAO,CAAC,KAAiC,EAAE,EAAE;QAC3C,QAAQ,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YAC5B,KAAK,OAAO,CAAC,EAAE;gBACb,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,EAAE,CAAC;gBACP,MAAM;YACR,KAAK,OAAO,CAAC,IAAI;gBACf,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,EAAE,CAAC;gBACT,MAAM;YACR,KAAK,IAAI;gBACP,MAAM,EAAE,CAAC;gBACT,MAAM;YACR,KAAK,GAAG;gBACN,KAAK,EAAE,CAAC;gBACR,MAAM;YACR,KAAK,OAAO,CAAC,MAAM;gBACjB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,aAAa,EAAE,CAAC;gBAChB,MAAM;YACR,KAAK,OAAO,CAAC,KAAK;gBAChB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,YAAY,EAAE,CAAC;gBACf,MAAM;YACR,KAAK,OAAO,CAAC,KAAK;gBAChB,IAAI,kBAAkB,EAAE;oBACtB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,YAAY,EAAE,CAAC;iBAChB;SACJ;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAMF,MAAM,CAAC,MAAM,kBAAkB,GAAuB,CAAC,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE;IACjF,OAAO,CAAC,KAAiC,EAAE,EAAE;QAC3C,QAAQ,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE;YAC5B,KAAK,OAAO,CAAC,EAAE,CAAC;YAChB,KAAK,OAAO,CAAC,IAAI;gBACf,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,MAAM,EAAE,CAAC;gBACT,YAAY,EAAE,CAAC;gBACf,MAAM;YACR,KAAK,OAAO,CAAC,KAAK,CAAC;YACnB,KAAK,OAAO,CAAC,KAAK;gBAChB,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,YAAY,EAAE,CAAC;gBACf,MAAM;SACT;IACH,CAAC,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseKeyDetail, CancelableEventHandler } from '../../../events';\nimport { KeyCode } from '../../../keycode';\n\nconst HOME = 36;\nconst END = 35;\n\ninterface UseMenuKeyboard {\n  (inputProps: {\n    goUp: () => void;\n    goDown: () => void;\n    selectOption: () => void;\n    goHome: () => void;\n    goEnd: () => void;\n    closeDropdown: () => void;\n    preventNativeSpace?: boolean;\n  }): CancelableEventHandler<BaseKeyDetail>;\n}\n\nexport const useMenuKeyboard: UseMenuKeyboard = ({\n  goUp,\n  goDown,\n  selectOption,\n  goHome,\n  goEnd,\n  closeDropdown,\n  preventNativeSpace = false,\n}) => {\n  return (event: CustomEvent<BaseKeyDetail>) => {\n    switch (event.detail.keyCode) {\n      case KeyCode.up:\n        event.preventDefault();\n        goUp();\n        break;\n      case KeyCode.down:\n        event.preventDefault();\n        goDown();\n        break;\n      case HOME:\n        goHome();\n        break;\n      case END:\n        goEnd();\n        break;\n      case KeyCode.escape:\n        event.stopPropagation();\n        closeDropdown();\n        break;\n      case KeyCode.enter:\n        event.preventDefault();\n        selectOption();\n        break;\n      case KeyCode.space:\n        if (preventNativeSpace) {\n          event.preventDefault();\n          selectOption();\n        }\n    }\n  };\n};\n\ninterface UseTriggerKeyboard {\n  (inputProps: { openDropdown: () => void; goHome: () => void }): CancelableEventHandler<BaseKeyDetail>;\n}\n\nexport const useTriggerKeyboard: UseTriggerKeyboard = ({ openDropdown, goHome }) => {\n  return (event: CustomEvent<BaseKeyDetail>) => {\n    switch (event.detail.keyCode) {\n      case KeyCode.up:\n      case KeyCode.down:\n        event.preventDefault();\n        goHome();\n        openDropdown();\n        break;\n      case KeyCode.space:\n      case KeyCode.enter:\n        event.preventDefault();\n        openDropdown();\n        break;\n    }\n  };\n};\n"]}