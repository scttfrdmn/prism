{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/attribute-editor/utils.ts"],"names":[],"mappings":"AASA,MAAM,UAAU,kBAAkB,CAAC,MAAuC,EAAE,SAAiB;IAC3F,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE;QAC7B,IAAI,eAAe,GAAG,CAAC,CAAC;QACxB,KAAK,MAAM,WAAW,IAAI,GAAG,EAAE;YAC7B,IAAI,CAAC,KAAK,SAAS,EAAE;gBACnB,OAAO,EAAE,eAAe,EAAE,aAAa,EAAE,eAAe,GAAG,WAAW,EAAE,CAAC;aAC1E;iBAAM;gBACL,eAAe,IAAI,WAAW,CAAC;aAChC;YACD,CAAC,EAAE,CAAC;SACL;KACF;IACD,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,0BAA0B,CACxC,MAAuC,EACvC,qBAA6B;;IAE7B,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CACnC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CACf,IAAI,CAAC,GAAG,CACN,GAAG,EACH,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAC3C,EACH,CAAC,CACF,CAAC;IACF,IAAI,wBAAwB,CAAC,MAAM,CAAC,EAAE;QACpC,MAAM,iBAAiB,GAAG,OAAO,CAAA,MAAA,MAAM,CAAC,YAAY,0CAAE,KAAK,CAAA,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAA,MAAM,CAAC,YAAY,0CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1G,OAAO;YACL,eAAe,EAAE,qBAAqB;YACtC,aAAa,EAAE,qBAAqB,GAAG,iBAAiB;SACzD,CAAC;KACH;IACD,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,aAAa,EAAE,UAAU,GAAG,CAAC,EAAE,CAAC;AAC/D,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,MAAuC;;IAC9E,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAA,MAAA,MAAM,CAAC,YAAY,0CAAE,MAAM,CAAA,CAAC;AAClE,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,MAAuC;;IAC5E,MAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CACzC,CAAC,OAAO,EAAE,GAAG,EAAE,EAAE,CACf,IAAI,CAAC,GAAG,CACN,OAAO,EACP,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC,CACzC,EACH,CAAC,CACF,CAAC;IAEF,MAAM,kBAAkB,GAAG,wBAAwB,CAAC,MAAM,CAAC;QACzD,CAAC,CAAC,CAAA,MAAA,MAAM,CAAC,YAAY,0CAAE,KAAK,MAAK,MAAM;YACrC,CAAC,CAAC,aAAa;YACf,CAAC,CAAC,GAAG,MAAA,MAAA,MAAM,CAAC,YAAY,0CAAE,KAAK,mCAAI,CAAC,IAAI;QAC1C,CAAC,CAAC,EAAE,CAAC;IAEP,OAAO,UAAU,gBAAgB,UAAU,kBAAkB,EAAE,CAAC;AAClE,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AttributeEditorProps } from './interfaces';\n\ninterface GridColumns {\n  gridColumnStart: number;\n  gridColumnEnd: number;\n}\n\nexport function getItemGridColumns(layout: AttributeEditorProps.GridLayout, itemIndex: number): GridColumns {\n  let i = 0;\n  for (const row of layout.rows) {\n    let gridColumnStart = 1;\n    for (const columnWidth of row) {\n      if (i === itemIndex) {\n        return { gridColumnStart, gridColumnEnd: gridColumnStart + columnWidth };\n      } else {\n        gridColumnStart += columnWidth;\n      }\n      i++;\n    }\n  }\n  return { gridColumnStart: 1, gridColumnEnd: 1 };\n}\n\nexport function getRemoveButtonGridColumns(\n  layout: AttributeEditorProps.GridLayout,\n  previousGridColumnEnd: number\n): GridColumns {\n  const maxColumns = layout.rows.reduce(\n    (max, columns) =>\n      Math.max(\n        max,\n        columns.reduce((sum, col) => sum + col, 0)\n      ),\n    0\n  );\n  if (isRemoveButtonOnSameLine(layout)) {\n    const removeButtonWidth = typeof layout.removeButton?.width === 'number' ? layout.removeButton?.width : 1;\n    return {\n      gridColumnStart: previousGridColumnEnd,\n      gridColumnEnd: previousGridColumnEnd + removeButtonWidth,\n    };\n  }\n  return { gridColumnStart: 1, gridColumnEnd: maxColumns + 1 };\n}\n\nexport function isRemoveButtonOnSameLine(layout: AttributeEditorProps.GridLayout) {\n  return layout.rows.length === 1 && !layout.removeButton?.ownRow;\n}\n\nexport function getGridTemplateColumns(layout: AttributeEditorProps.GridLayout) {\n  const totalColumnUnits = layout.rows.reduce(\n    (maxCols, row) =>\n      Math.max(\n        maxCols,\n        row.reduce((cols, col) => cols + col, 0)\n      ),\n    0\n  );\n\n  const removeButtonColumn = isRemoveButtonOnSameLine(layout)\n    ? layout.removeButton?.width === 'auto'\n      ? 'max-content'\n      : `${layout.removeButton?.width ?? 1}fr`\n    : '';\n\n  return `repeat(${totalColumnUnits}, 1fr) ${removeButtonColumn}`;\n}\n"]}