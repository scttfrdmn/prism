import React from 'react';
import { ButtonProps } from '../button/interfaces';
import { Breakpoint } from '../internal/breakpoints';
import { NonCancelableEventHandler } from '../internal/events';
import { AttributeEditorProps } from './interfaces';
interface RowProps<T> {
  breakpoint: Breakpoint | null;
  layout: AttributeEditorProps.GridLayout;
  item: T;
  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;
  i18nStrings: AttributeEditorProps.I18nStrings | undefined;
  index: number;
  removable: boolean;
  removeButtonText?: string;
  removeButtonRefs: Array<ButtonProps.Ref | undefined>;
  customRowActions?: (props: AttributeEditorProps.RowActionsProps<T>) => React.ReactNode;
  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;
  removeButtonAriaLabel?: (item: T) => string;
}
export declare const Row: <T>(props: RowProps<T>) => JSX.Element;
export {};