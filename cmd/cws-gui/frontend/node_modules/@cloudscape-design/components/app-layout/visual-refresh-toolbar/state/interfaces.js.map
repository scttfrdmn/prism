{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../../src/app-layout/visual-refresh-toolbar/state/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { AppLayoutProps } from '../../interfaces';\nimport { OnChangeParams } from '../../utils/use-drawers';\nimport { Focusable, FocusControlMultipleStates } from '../../utils/use-focus-control';\nimport { SplitPanelToggleProps, ToolbarProps } from '../toolbar';\n\nexport interface SharedProps {\n  navigationOpen: boolean;\n  ariaLabels: AppLayoutProps.Labels | undefined;\n  navigation: React.ReactNode;\n  onNavigationToggle?: (open: boolean) => void;\n  navigationFocusRef: React.Ref<Focusable> | undefined;\n  breadcrumbs: React.ReactNode;\n  activeDrawerId: string | null;\n  drawers: ReadonlyArray<AppLayoutProps.Drawer> | undefined;\n  onActiveDrawerChange: ((drawerId: string | null, params: OnChangeParams) => void) | undefined;\n  drawersFocusRef: React.Ref<Focusable> | undefined;\n  globalDrawersFocusControl?: FocusControlMultipleStates | undefined;\n  globalDrawers?: ReadonlyArray<AppLayoutProps.Drawer> | undefined;\n  activeGlobalDrawersIds?: ReadonlyArray<string> | undefined;\n  onActiveGlobalDrawersChange?: ((newDrawerId: string, params: OnChangeParams) => void) | undefined;\n  splitPanel: React.ReactNode;\n  splitPanelToggleProps: SplitPanelToggleProps | undefined;\n  splitPanelFocusRef?: React.Ref<Focusable> | undefined;\n  onSplitPanelToggle?: () => void;\n  expandedDrawerId?: string | null;\n  setExpandedDrawerId?: (value: string | null) => void;\n  aiDrawer?: AppLayoutProps.Drawer | undefined;\n  aiDrawerFocusRef: React.Ref<Focusable> | undefined;\n}\n\nexport type MergeProps = (\n  ownProps: SharedProps,\n  additionalProps: ReadonlyArray<Partial<SharedProps>>\n) => ToolbarProps | null;\n"]}