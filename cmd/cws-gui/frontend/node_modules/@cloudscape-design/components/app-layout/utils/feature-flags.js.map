{"version":3,"file":"feature-flags.js","sourceRoot":"","sources":["../../../../src/app-layout/utils/feature-flags.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,UAAU,EAAE,MAAM,OAAO,CAAC;AAEnC,OAAO,EAAE,aAAa,EAAE,MAAM,+CAA+C,CAAC;AAE9E,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,EAAE,6BAA6B,EAAE,MAAM,oCAAoC,CAAC;AAEnF,uGAAuG;AACvG,MAAM,CAAC,MAAM,uBAAuB,GAAG,GAAG,EAAE;IAC1C,MAAM,SAAS,GAAG,gBAAgB,EAAE,CAAC;IACrC,OAAO,SAAS,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAC9F,CAAC,CAAC;AAEF,gDAAgD;AAChD,6HAA6H;AAC7H,qHAAqH;AACrH,+EAA+E;AAC/E,MAAM,CAAC,MAAM,gCAAgC,GAAG,GAAG,EAAE;;IACnD,MAAM,gBAAgB,GAAG,uBAAuB,EAAE,CAAC;IACnD,MAAM,eAAe,GAAG,MAAA,UAAU,CAAC,6BAA6B,CAAC,mCAAI,KAAK,CAAC;IAE3E,OAAO,eAAe,IAAI,gBAAgB,CAAC;AAC7C,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext } from 'react';\n\nimport { getGlobalFlag } from '@cloudscape-design/component-toolkit/internal';\n\nimport { useVisualRefresh } from '../../internal/hooks/use-visual-mode';\nimport { AppLayoutToolbarPublicContext } from '../visual-refresh-toolbar/contexts';\n\n//   useAppLayoutFlagEnabled is set to true only in consoles. It controls if AppLayout theme is toolbar\nexport const useAppLayoutFlagEnabled = () => {\n  const isRefresh = useVisualRefresh();\n  return isRefresh && (getGlobalFlag('appLayoutWidget') || getGlobalFlag('appLayoutToolbar'));\n};\n\n// AppLayoutToolbar component will have 2 modes:\n//   - for those who use AppLayout component with toolbar. they expect to have all existing features, including deduplication\n//   - for non-console usage. in this case we don't need \"hidden\" features to be enabled, now it's only deduplication\n// the hooks I want to name will exist only internally to control this behavior\nexport const useAppLayoutToolbarDesignEnabled = () => {\n  const isToolbarPrivate = useAppLayoutFlagEnabled();\n  const isToolbarPublic = useContext(AppLayoutToolbarPublicContext) ?? false;\n\n  return isToolbarPublic || isToolbarPrivate;\n};\n"]}