{"version":3,"file":"style.js","sourceRoot":"","sources":["../../../src/radio-group/style.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { SYSTEM } from '../internal/environment';\nimport { getComputedAbstractSwitchState } from '../internal/utils/style';\nimport { RadioGroupProps } from './interfaces';\n\nexport function getOuterCircleStyle(\n  style: RadioGroupProps.Style | undefined,\n  checked: boolean | undefined,\n  disabled: boolean | undefined,\n  readOnly: boolean | undefined\n) {\n  let properties;\n\n  if (SYSTEM === 'core' && style?.input) {\n    const computedState = getComputedAbstractSwitchState(checked, disabled, readOnly, undefined);\n\n    properties = {\n      fill: style.input?.fill && style.input.fill[computedState as keyof typeof style.input.fill],\n      stroke: style.input?.stroke && style.input.stroke[computedState as keyof typeof style.input.stroke],\n    };\n  }\n\n  return properties;\n}\n\nexport function getInnerCircleStyle(\n  style: RadioGroupProps.Style | undefined,\n  checked: boolean | undefined,\n  disabled: boolean | undefined,\n  readOnly: boolean | undefined\n) {\n  let properties;\n\n  if (SYSTEM === 'core' && style?.input) {\n    const computedState = getComputedAbstractSwitchState(checked, disabled, readOnly, undefined);\n\n    properties = {\n      fill: style.input?.circle?.fill && style.input.circle.fill[computedState as keyof typeof style.input.circle.fill],\n      stroke: style.input?.fill && style.input.fill[computedState as keyof typeof style.input.fill],\n    };\n  }\n\n  return properties;\n}\n\nexport function getAbstractSwitchStyles(\n  style: RadioGroupProps.Style | undefined,\n  checked: boolean | undefined,\n  disabled: boolean | undefined,\n  readOnly: boolean | undefined\n) {\n  let properties = {};\n\n  if (SYSTEM === 'core' && (style?.label || style?.description || style?.input)) {\n    const computedState = getComputedAbstractSwitchState(checked, disabled, readOnly, undefined);\n\n    properties = {\n      label: {\n        color: style?.label?.color && style.label.color[computedState as keyof typeof style.label.color],\n      },\n      description: {\n        color:\n          style?.description?.color && style.description.color[computedState as keyof typeof style.description.color],\n      },\n      focusRing: {\n        borderColor: style?.input?.focusRing?.borderColor,\n        borderRadius: style?.input?.focusRing?.borderRadius,\n        borderWidth: style?.input?.focusRing?.borderWidth,\n      },\n    };\n  }\n\n  return properties;\n}\n"]}