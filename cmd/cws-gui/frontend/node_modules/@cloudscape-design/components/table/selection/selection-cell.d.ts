/// <reference types="react" />
import { TableTdElementProps } from '../body-cell/td-element';
import { TableThElementProps } from '../header-cell/th-element';
import { SelectionProps } from './interfaces';
import { SelectionControlProps } from './selection-control';
interface TableHeaderSelectionCellProps extends Omit<TableThElementProps, 'children' | 'colIndex'> {
  focusedComponent?: null | string;
  singleSelectionHeaderAriaLabel?: string;
  getSelectAllProps?: () => SelectionProps;
  onFocusMove: ((sourceElement: HTMLElement, fromIndex: number, direction: -1 | 1) => void) | undefined;
}
interface TableBodySelectionCellProps extends Omit<TableTdElementProps, 'children' | 'colIndex' | 'wrapLines' | 'isEditable' | 'isEditing'> {
  selectionControlProps?: SelectionControlProps;
}
export declare function TableHeaderSelectionCell({
  focusedComponent,
  singleSelectionHeaderAriaLabel,
  getSelectAllProps,
  onFocusMove,
  ...props
}: TableHeaderSelectionCellProps): JSX.Element;
export declare function TableBodySelectionCell({
  selectionControlProps,
  ...props
}: TableBodySelectionCellProps): JSX.Element;
export {};