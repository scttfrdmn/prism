{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../src/date-range-picker/calendar/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../../internal/base-component';\nimport { SomeRequired } from '../../internal/types';\nimport { DateRangePickerProps } from '../interfaces';\n\nexport type RangeCalendarI18nStrings = Pick<\n  DateRangePickerProps.I18nStrings,\n  | 'todayAriaLabel'\n  | 'nextMonthAriaLabel'\n  | 'previousMonthAriaLabel'\n  | 'currentMonthAriaLabel'\n  | 'nextYearAriaLabel'\n  | 'previousYearAriaLabel'\n  | 'startMonthLabel'\n  | 'startDateLabel'\n  | 'startTimeLabel'\n  | 'endMonthLabel'\n  | 'endDateLabel'\n  | 'endTimeLabel'\n  | 'dateConstraintText'\n  | 'isoDateConstraintText'\n  | 'slashedDateConstraintText'\n  | 'dateTimeConstraintText'\n  | 'isoDateTimeConstraintText'\n  | 'slashedDateTimeConstraintText'\n  | 'monthConstraintText'\n  | 'isoMonthConstraintText'\n  | 'slashedMonthConstraintText'\n  | 'renderSelectedAbsoluteRangeAriaLive'\n>;\n\nexport interface DateRangePickerCalendarProps\n  extends BaseComponentProps,\n    SomeRequired<\n      Pick<\n        DateRangePickerProps,\n        | 'granularity'\n        | 'locale'\n        | 'startOfWeek'\n        | 'timeInputFormat'\n        | 'dateInputFormat'\n        | 'i18nStrings'\n        | 'dateOnly'\n        | 'absoluteFormat'\n        | 'customAbsoluteRangeControl'\n        | 'isDateEnabled'\n        | 'dateDisabledReason'\n      >,\n      'absoluteFormat' | 'timeInputFormat'\n    > {\n  value: DateRangePickerProps.PendingAbsoluteValue;\n  setValue: React.Dispatch<React.SetStateAction<DateRangePickerProps.PendingAbsoluteValue>>;\n  i18nStrings?: RangeCalendarI18nStrings;\n}\n\nexport interface RangeInputsProps\n  extends BaseComponentProps,\n    SomeRequired<\n      Pick<DateRangePickerProps, 'granularity' | 'dateOnly' | 'timeInputFormat' | 'dateInputFormat'>,\n      'dateOnly' | 'timeInputFormat' | 'granularity'\n    > {\n  startDate: string;\n  onChangeStartDate: (value: string) => void;\n  startTime: string;\n  onChangeStartTime: (value: string) => void;\n  endDate: string;\n  onChangeEndDate: (value: string) => void;\n  endTime: string;\n  onChangeEndTime: (value: string) => void;\n  i18nStrings?: RangeCalendarI18nStrings;\n}\n"]}