{"version":3,"file":"use-table-integration.js","sourceRoot":"","sources":["../../../../src/text-filter/analytics/use-table-integration.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE3C,OAAO,EAAE,eAAe,EAAE,MAAM,iDAAiD,CAAC;AAClF,OAAO,EAAE,yBAAyB,EAAE,MAAM,gDAAgD,CAAC;AAE3F;;;;;GAKG;AACH,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,aAAiC,EAAE,SAA6B,EAAE,EAAE;IACtG,MAAM,qBAAqB,GAAG,yBAAyB,EAAE,CAAC;IAC1D,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,eAAe,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAE1E,SAAS,CAAC,GAAG,EAAE;;QACb,IAAI,MAAA,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,SAAS,0CAAE,OAAO,EAAE;YAC7C,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,aAAa,CAAC;YACnE,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC;YACjE,qBAAqB,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,aAAa,CAAC;YAEnE,OAAO,GAAG,EAAE;;gBACH,MAAA,qBAAqB,CAAC,SAAS,CAAC,OAAO,+CAAE,UAAU,CAAC;gBACpD,MAAA,qBAAqB,CAAC,SAAS,CAAC,OAAO,+CAAE,WAAW,CAAC;gBACrD,MAAA,qBAAqB,CAAC,SAAS,CAAC,OAAO,+CAAE,QAAQ,CAAC;YAC3D,CAAC,CAAC;SACH;IACH,CAAC,EAAE,CAAC,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect, useMemo } from 'react';\n\nimport { parseCountValue } from '../../internal/analytics/utils/parse-count-text';\nimport { useTableComponentsContext } from '../../internal/context/table-component-context';\n\n/**\n * Custom hook that integrates table counter values with table component context.\n *\n * The extracted count value is automatically synchronized with the table header\n * component through the table context, updating the countText property.\n */\nexport const useTableIntegration = (filteringText: string | undefined, countText: string | undefined) => {\n  const tableComponentContext = useTableComponentsContext();\n  const countValue = useMemo(() => parseCountValue(countText), [countText]);\n\n  useEffect(() => {\n    if (tableComponentContext?.filterRef?.current) {\n      tableComponentContext.filterRef.current.filterText = filteringText;\n      tableComponentContext.filterRef.current.filterCount = countValue;\n      tableComponentContext.filterRef.current.filtered = !!filteringText;\n\n      return () => {\n        delete tableComponentContext.filterRef.current?.filterText;\n        delete tableComponentContext.filterRef.current?.filterCount;\n        delete tableComponentContext.filterRef.current?.filtered;\n      };\n    }\n  }, [tableComponentContext?.filterRef, countValue, filteringText]);\n};\n"]}