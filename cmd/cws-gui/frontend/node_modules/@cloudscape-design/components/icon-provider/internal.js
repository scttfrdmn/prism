// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React, { useContext } from 'react';
import generatedIcons from '../icon/generated/icons';
import { InternalIconContext } from './context';
function InternalIconProvider({ children, icons }) {
    const contextIcons = useContext(InternalIconContext);
    let iconsToProvide = generatedIcons;
    // Merge the context icons with the custom icons, this allows child instances of IconProvider to persist parent configurations
    if (icons !== null) {
        const clonedIcons = Object.assign({}, icons);
        // Reset null icon values to their original definitions
        Object.keys(clonedIcons).forEach(name => {
            const iconName = name;
            if (iconName in generatedIcons && clonedIcons[iconName] === null) {
                clonedIcons[iconName] = generatedIcons[iconName];
            }
        });
        iconsToProvide = Object.assign(Object.assign({}, contextIcons), clonedIcons);
    }
    return React.createElement(InternalIconContext.Provider, { value: iconsToProvide }, children);
}
export default InternalIconProvider;
//# sourceMappingURL=internal.js.map