{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/alert/actions-wrapper/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACzD,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,QAAQ,EAAE,MAAM,+CAA+C,CAAC;AACzE,OAAO,EAAE,6BAA6B,EAAE,MAAM,kEAAkE,CAAC;AAEjH,OAAO,cAAuC,MAAM,uBAAuB,CAAC;AAG5E,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,SAAS,kBAAkB,CACzB,eAAuD,EACvD,MAAuB,EACvB,UAA2B,EAC3B,aAA6C;IAE7C,IAAI,CAAC,MAAM,IAAI,UAAU,EAAE;QACzB,MAAM,GAAG,CACP,8CACM,6BAA6B,CAAC;YAChC,MAAM,EAAE,aAAa;SACiC,CAAC;YAEzD,oBAAC,cAAc,IAAC,SAAS,EAAE,eAAe,CAAC,YAAY,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAC,MAAM,IAC/F,UAAU,CACI,CACZ,CACR,CAAC;KACH;IACD,OAAO,MAAM,CAAC,CAAC,CAAC,6BAAK,SAAS,EAAE,eAAe,CAAC,UAAU,IAAG,MAAM,CAAO,CAAC,CAAC,CAAC,IAAI,CAAC;AACpF,CAAC;AAaD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,SAAS,EACT,eAAe,EACf,MAAM,EACN,iBAAiB,EACjB,UAAU,EACV,YAAY,EACZ,cAAc,EACd,aAAa,GACO,EAAE,EAAE;IACxB,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;IAC/C,eAAe,CAAC,GAAG,EAAE;QACnB,IAAI,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,cAAc,IAAI,CAAC,YAAY,EAAE;YACpD,OAAO;SACR;QACD,SAAS,KAAK;YACZ,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACpC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC,OAAQ,CAAC;YACjD,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,cAAe,GAAG,WAAW,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC;YAC9E,yEAAyE;YACzE,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;QAC1B,CAAC;QAED,oEAAoE;QACpE,0DAA0D;QAC1D,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7C,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACrF,KAAK,EAAE,CAAC;QACR,OAAO,GAAG,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IACH,MAAM,YAAY,GAAG,kBAAkB,CAAC,eAAe,EAAE,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;IAC5F,IAAI,CAAC,YAAY,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;QACnD,OAAO,IAAI,CAAC;KACb;IAED,OAAO,CACL,6BAAK,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,IAAI,YAAY,CAAC;QAC5E,YAAY;QACZ,iBAAiB,CACd,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useLayoutEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { getIsRtl } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalButton, { InternalButtonProps } from '../../button/internal';\nimport { GeneratedAnalyticsMetadataAlertButtonClick } from '../analytics-metadata/interfaces';\n\nimport styles from './styles.css.js';\n\nfunction createActionButton(\n  testUtilClasses: ActionsWrapperProps['testUtilClasses'],\n  action: React.ReactNode,\n  buttonText: React.ReactNode,\n  onButtonClick: InternalButtonProps['onClick']\n) {\n  if (!action && buttonText) {\n    action = (\n      <span\n        {...getAnalyticsMetadataAttribute({\n          action: 'buttonClick',\n        } as Partial<GeneratedAnalyticsMetadataAlertButtonClick>)}\n      >\n        <InternalButton className={testUtilClasses.actionButton} onClick={onButtonClick} formAction=\"none\">\n          {buttonText}\n        </InternalButton>\n      </span>\n    );\n  }\n  return action ? <div className={testUtilClasses.actionSlot}>{action}</div> : null;\n}\n\ninterface ActionsWrapperProps {\n  className: string;\n  testUtilClasses: { actionSlot: string; actionButton: string };\n  action: React.ReactNode;\n  discoveredActions: Array<React.ReactNode>;\n  buttonText: React.ReactNode;\n  wrappedClass?: string;\n  containerWidth?: number;\n  onButtonClick: InternalButtonProps['onClick'];\n}\n\nexport const ActionsWrapper = ({\n  className,\n  testUtilClasses,\n  action,\n  discoveredActions,\n  buttonText,\n  wrappedClass,\n  containerWidth,\n  onButtonClick,\n}: ActionsWrapperProps) => {\n  const [wrapped, setWrapped] = useState(false);\n  const ref = React.useRef<HTMLDivElement>(null);\n  useLayoutEffect(() => {\n    if (!ref.current || !containerWidth || !wrappedClass) {\n      return;\n    }\n    function check() {\n      const isRtl = getIsRtl(ref.current);\n      const { offsetWidth, offsetLeft } = ref.current!;\n      const start = isRtl ? containerWidth! - offsetWidth - offsetLeft : offsetLeft;\n      // if the action slot is towards the left (right in RTL) of its container\n      setWrapped(start < 100);\n    }\n\n    // Discovered actions are rendered by their plugin, so don't cause a\n    // re-render of our React tree. So we observe for changes.\n    const observer = new MutationObserver(check);\n    observer.observe(ref.current, { attributes: false, childList: true, subtree: true });\n    check();\n    return () => observer.disconnect();\n  });\n  const actionButton = createActionButton(testUtilClasses, action, buttonText, onButtonClick);\n  if (!actionButton && discoveredActions.length === 0) {\n    return null;\n  }\n\n  return (\n    <div ref={ref} className={clsx(styles.root, className, wrapped && wrappedClass)}>\n      {actionButton}\n      {discoveredActions}\n    </div>\n  );\n};\n"]}