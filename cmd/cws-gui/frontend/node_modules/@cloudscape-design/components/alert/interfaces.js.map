{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/alert/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { ErrorContext } from '../internal/analytics/interfaces';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport namespace AlertProps {\n  export type Type = 'success' | 'error' | 'warning' | 'info';\n\n  export interface Ref {\n    /**\n     * Sets focus on the alert content.\n     */\n    focus(): void;\n  }\n\n  export interface I18nStrings {\n    /*\n     * Specifies the ARIA label for the alert icon for type `success`.\n     * @property {string} [successIconAriaLabel] - optional\n     */\n    successIconAriaLabel?: string;\n    /*\n     * Specifies the ARIA label for the alert icon for type `error`.\n     * @property {string} [errorIconAriaLabel] - optional\n     */\n    errorIconAriaLabel?: string;\n    /*\n     * Specifies the ARIA label for the alert icon for type `warning`.\n     * @property {string} [warningIconAriaLabel] - optional\n     */\n    warningIconAriaLabel?: string;\n    /*\n     * Specifies the ARIA label for the alert icon for type `info`.\n     * @property {string} [infoIconAriaLabel] - optional\n     */\n    infoIconAriaLabel?: string;\n    /*\n     * Specifies the ARIA label for the dismiss button.\n     * @property {string} [dismissAriaLabel] - optional\n     */\n    dismissAriaLabel?: string;\n  }\n\n  export interface AnalyticsMetadata {\n    errorContext?: ErrorContext;\n  }\n\n  export interface Style {\n    root?: {\n      background?: string;\n      borderColor?: string;\n      borderRadius?: string;\n      borderWidth?: string;\n      color?: string;\n      focusRing?: {\n        borderColor?: string;\n        borderRadius?: string;\n        borderWidth?: string;\n      };\n    };\n    dismissButton?: {\n      color?: {\n        active?: string;\n        default?: string;\n        hover?: string;\n      };\n      focusRing?: {\n        borderColor?: string;\n        borderRadius?: string;\n        borderWidth?: string;\n      };\n    };\n  }\n}\n\nexport interface AlertProps extends BaseComponentProps {\n  /**\n   * Specifies the type of message you want to display.\n   */\n  type?: AlertProps.Type;\n\n  /**\n   * Provides a text alternative for the icon.\n   *\n   * @deprecated Use the label properties inside `i18nStrings` instead.\n   * If the label is assigned via the `i18nStrings` property, this label will be ignored.\n   */\n  statusIconAriaLabel?: string;\n\n  /**\n   * Determines whether the alert is displayed.\n   * @deprecated Use conditional rendering in your code instead of this prop.\n   */\n  visible?: boolean;\n  /**\n   * Adds a close button to the alert when set to `true`.\n   * An `onDismiss` event is fired when a user clicks the button.\n   */\n  dismissible?: boolean;\n  /**\n   * Adds an aria-label to the dismiss button.\n   * @i18n\n   *\n   * @deprecated Use `i18nStrings.dismissAriaLabel` instead.\n   * If the label is assigned via the `i18nStrings` property, this label will be ignored.\n   */\n  dismissAriaLabel?: string;\n  /**\n   * Primary text displayed in the element.\n   */\n  children?: React.ReactNode;\n  /**\n   * Heading text.\n   */\n  header?: React.ReactNode;\n  /**\n   * Displays an action button next to the message area when set.\n   * An `onButtonClick` event is fired when the user clicks it.\n   * @deprecated Replaced by `action`.\n   */\n  buttonText?: React.ReactNode;\n  /**\n   * Specifies an action for the alert message.\n   * Although it is technically possible to insert any content, our UX guidelines only allow you to add a button.\n   */\n  action?: React.ReactNode;\n  /**\n   * Fired when the user clicks the close icon that is displayed\n   * when the `dismissible` property is set to `true`.\n   */\n  onDismiss?: NonCancelableEventHandler;\n  /**\n   * Fired when the user clicks the action button.\n   * **Deprecated** Replaced by `action`.\n   */\n  onButtonClick?: NonCancelableEventHandler;\n  /**\n   * An object containing all the necessary localized strings required by the component.\n   * @property {AlertProps.I18nStrings} [i18nStrings] - optional\n   * @i18n\n   */\n  i18nStrings?: AlertProps.I18nStrings;\n  /**\n   * Specifies additional analytics-related metadata.\n   * * `errorContext` - Identifies the error category and sub-category.\n   * @analytics\n   */\n  analyticsMetadata?: AlertProps.AnalyticsMetadata;\n  /**\n   * @awsuiSystem core\n   */\n  style?: AlertProps.Style;\n}\n"]}