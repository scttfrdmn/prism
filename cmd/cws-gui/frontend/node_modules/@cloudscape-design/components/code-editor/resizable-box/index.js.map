{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/code-editor/resizable-box/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { useStableCallback } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalDragHandle from '../../internal/components/drag-handle';\n\nimport styles from './styles.css.js';\n\nconst KEYBOARD_STEP_SIZE = 20;\n\nexport interface ResizeBoxProps {\n  children: React.ReactNode;\n  height: number;\n  minHeight: number;\n  onResize: (newHeight: number) => void;\n\n  handleAriaLabel?: string;\n  handleTooltipText?: string;\n}\n\nexport function ResizableBox({\n  children,\n  height,\n  minHeight,\n  onResize,\n  handleAriaLabel,\n  handleTooltipText,\n}: ResizeBoxProps) {\n  const [dragOffset, setDragOffset] = useState<null | number>(null);\n  const onResizeStable = useStableCallback(onResize);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onPointerDown: React.PointerEventHandler = event => {\n    if ((event.pointerType === 'mouse' && event.button !== 0) || !containerRef.current) {\n      return;\n    }\n    const containerBottom = containerRef.current.getBoundingClientRect().bottom;\n    setDragOffset(containerBottom - event.clientY);\n  };\n\n  const onKeyDown: React.KeyboardEventHandler = event => {\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowRight':\n        event.preventDefault(); // Prevent page scroll\n        onResizeStable(height + KEYBOARD_STEP_SIZE);\n        break;\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        event.preventDefault(); // Prevent page scroll\n        onResizeStable(Math.max(height - KEYBOARD_STEP_SIZE, minHeight));\n        break;\n    }\n  };\n\n  useEffect(() => {\n    if (dragOffset === null || !containerRef.current) {\n      return;\n    }\n    const container = containerRef.current;\n\n    const onPointerMove = (event: PointerEvent) => {\n      const { top } = container.getBoundingClientRect();\n      const cursor = event.clientY;\n      onResizeStable(Math.max(cursor + dragOffset - top, minHeight));\n    };\n    const onPointerUp = () => {\n      setDragOffset(null);\n    };\n    const controller = new AbortController();\n    document.body.classList.add(styles['resize-active']);\n    container.classList.add(styles['cursor-active']);\n    document.addEventListener('pointermove', onPointerMove, { signal: controller.signal });\n    document.addEventListener('pointerup', onPointerUp, { signal: controller.signal });\n    return () => {\n      controller.abort();\n      document.body.classList.remove(styles['resize-active']);\n      container.classList.remove(styles['cursor-active']);\n    };\n  }, [dragOffset, minHeight, onResizeStable]);\n\n  return (\n    <div ref={containerRef} className={styles['resizable-box']} style={{ height }}>\n      {children}\n\n      <div className={styles['resizable-box-handle']}>\n        <InternalDragHandle\n          ariaLabel={handleAriaLabel}\n          variant=\"resize-area\"\n          // Provide an arbitrary large value to valueMax since the editor can be\n          // resized to be infinitely large.\n          ariaValue={{ valueMin: minHeight, valueMax: 1000000, valueNow: height }}\n          tooltipText={handleTooltipText}\n          onPointerDown={onPointerDown}\n          onKeyDown={onKeyDown}\n          directions={{\n            'block-start': height > minHeight ? 'active' : 'disabled',\n            'block-end': 'active',\n          }}\n          onDirectionClick={direction => {\n            switch (direction) {\n              case 'block-end':\n                onResizeStable(height + KEYBOARD_STEP_SIZE);\n                break;\n              case 'block-start':\n                onResizeStable(Math.max(height - KEYBOARD_STEP_SIZE, minHeight));\n                break;\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n"]}