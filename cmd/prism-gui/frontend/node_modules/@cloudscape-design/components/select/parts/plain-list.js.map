{"version":3,"file":"plain-list.js","sourceRoot":"","sources":["../../../../src/select/parts/plain-list.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { useMergeRefs, useUniqueId } from '@cloudscape-design/component-toolkit/internal';\n\nimport { DropdownOption } from '../../internal/components/option/interfaces';\nimport OptionsList from '../../internal/components/options-list';\nimport { HighlightType } from '../../internal/components/options-list/utils/use-highlight-option';\nimport { renderOptions } from '../utils/render-options';\nimport scrollToIndex from '../utils/scroll-to-index';\nimport { GetOptionProps, MenuProps } from '../utils/use-select';\nimport { fallbackItemHeight } from './common';\n\nimport styles from './styles.css.js';\n\nexport interface SelectListProps {\n  menuProps: MenuProps;\n  getOptionProps: GetOptionProps;\n  filteredOptions: ReadonlyArray<DropdownOption>;\n  filteringValue: string;\n  highlightType: HighlightType;\n  checkboxes?: boolean;\n  hasDropdownStatus?: boolean;\n  listBottom?: React.ReactNode;\n  useInteractiveGroups?: boolean;\n  screenReaderContent?: string;\n  firstOptionSticky?: boolean;\n}\n\nexport namespace SelectListProps {\n  export type SelectListRef = (index: number) => void;\n}\n\nconst PlainList = (\n  {\n    menuProps,\n    getOptionProps,\n    filteredOptions,\n    filteringValue,\n    highlightType,\n    checkboxes,\n    hasDropdownStatus,\n    listBottom,\n    useInteractiveGroups,\n    screenReaderContent,\n    firstOptionSticky,\n  }: SelectListProps,\n  ref: React.Ref<SelectListProps.SelectListRef>\n) => {\n  const idPrefix = useUniqueId('select-list-');\n  const stickyOptionRef = useRef<HTMLDivElement>(null);\n  const [stickyOptionBlockSize, setStickyOptionBlockSize] = useState(firstOptionSticky ? fallbackItemHeight : 0);\n\n  const [width, menuMeasureRef] = useContainerQuery(rect => {\n    if (stickyOptionRef.current) {\n      // Cannot use container query on the sticky option individually because it is not rendered until the dropdown is open.\n      // Not expecting the sticky option to change size without the dropdown also changing size.\n\n      // The effects of using the sticky option block size to set the menu scroll padding are covered by integration tests.\n      // istanbul ignore next\n      setStickyOptionBlockSize(stickyOptionRef.current.clientHeight);\n    }\n    return { inner: rect.contentBoxWidth, outer: rect.borderBoxWidth };\n  });\n\n  const menuRef = menuProps.ref;\n\n  const mergedRef = useMergeRefs(menuMeasureRef, menuRef);\n\n  useImperativeHandle(\n    ref,\n    () => (index: number) => {\n      const isSticky = firstOptionSticky && index === 0;\n      if (highlightType.moveFocus && menuRef.current && !isSticky) {\n        scrollToIndex({ index, menuEl: menuRef.current });\n      }\n    },\n    [firstOptionSticky, highlightType.moveFocus, menuRef]\n  );\n\n  const withScrollbar = !!width && width.inner < width.outer;\n\n  return (\n    <OptionsList {...menuProps} ref={mergedRef} stickyItemBlockSize={stickyOptionBlockSize}>\n      {renderOptions({\n        options: filteredOptions,\n        getOptionProps,\n        filteringValue,\n        idPrefix,\n        highlightType,\n        checkboxes,\n        hasDropdownStatus,\n        useInteractiveGroups,\n        screenReaderContent,\n        firstOptionSticky,\n        stickyOptionRef,\n        withScrollbar,\n      })}\n      {listBottom ? (\n        <div role=\"option\" className={styles['list-bottom']}>\n          {listBottom}\n        </div>\n      ) : null}\n    </OptionsList>\n  );\n};\n\nexport default forwardRef(PlainList);\n"]}