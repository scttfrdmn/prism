{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/toggle/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { BaseCheckboxProps } from '../checkbox/base-checkbox';\nimport { NonCancelableEventHandler } from '../internal/events';\n/**\n * @awsuiSystem core\n */\nimport { NativeAttributes } from '../internal/utils/with-native-attributes';\n\nexport interface ToggleProps extends BaseCheckboxProps {\n  /**\n   * The control's label that's displayed next to the toggle. Clicking this will invoke a state change.\n   * @displayname label\n   */\n  children?: React.ReactNode;\n\n  /*\n   * Called when the user changes their selection.\n   * The event `detail` contains the current value for the `checked` property.\n   */\n  onChange?: NonCancelableEventHandler<ToggleProps.ChangeDetail>;\n\n  /**\n   * @awsuiSystem core\n   */\n  style?: ToggleProps.Style;\n\n  /**\n   * Attributes to add to the native `input` element.\n   * Some attributes will be automatically combined with internal attribute values:\n   * - `className` will be appended.\n   * - Event handlers will be chained, unless the default is prevented.\n   *\n   * We do not support using this attribute to apply custom styling.\n   *\n   * @awsuiSystem core\n   */\n  nativeInputAttributes?: NativeAttributes<React.InputHTMLAttributes<HTMLInputElement>>;\n}\n\nexport namespace ToggleProps {\n  export interface Ref {\n    /**\n     * Sets input focus onto the UI control.\n     */\n    focus(): void;\n  }\n\n  export interface ChangeDetail {\n    checked: boolean;\n  }\n\n  export interface Style {\n    input: {\n      background?: {\n        checked?: string;\n        default?: string;\n        disabled?: string;\n        readOnly?: string;\n      };\n      handle?: {\n        background?: {\n          checked?: string;\n          default?: string;\n          disabled?: string;\n          readOnly?: string;\n        };\n      };\n      focusRing?: {\n        borderColor?: string;\n        borderRadius?: string;\n        borderWidth?: string;\n      };\n    };\n    label?: {\n      color?: {\n        checked?: string;\n        default?: string;\n        disabled?: string;\n        readOnly?: string;\n      };\n    };\n  }\n}\n"]}