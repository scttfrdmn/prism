{"version":3,"file":"file-input-item.js","sourceRoot":"","sources":["../../../src/button-group/file-input-item.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AACpD,OAAO,IAAI,MAAM,MAAM,CAAC;AAGxB,OAAO,iBAAiB,MAAM,2BAA2B,CAAC;AAC1D,OAAO,OAAO,MAAM,yCAAyC,CAAC;AAC9D,OAAO,EAA0B,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAG1F,OAAO,cAAc,MAAM,8BAA8B,CAAC;AAS1D,MAAM,aAAa,GAAG,UAAU,CAC9B,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,gBAAgB,EAAE,aAAa,EAAsB,EAAE,GAAkC,EAAE,EAAE;IACjH,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAS,EAAE,CAAC,CAAC;IAC/C,MAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAiB,IAAI,CAAC,CAAC;IAExD,MAAM,cAAc,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;IAE5C,OAAO,CACL,6BAAK,GAAG,EAAE,YAAY;QACpB,oBAAC,iBAAiB,IAChB,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,EACpD,GAAG,EAAE,GAAG,EACR,OAAO,EAAC,MAAM,EACd,SAAS,EAAE,IAAI,CAAC,IAAI,EACpB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,KAAK,CAAC,EAAE;gBAChB,mBAAmB,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;gBAC/E,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,CAAC,iBACY,IAAI,CAAC,EAAE,EACpB,uBAAuB,EAAE;gBACvB,aAAa,EAAE,IAAI,CAAC,EAAE;aACvB,EACD,gBAAgB,EAAE,cAAc,CAAC,IAAI,GACrC;QACD,cAAc,IAAI,CACjB,oBAAC,OAAO,IACN,QAAQ,EAAE,YAAY,EACtB,QAAQ,EAAE,IAAI,CAAC,EAAE,EACjB,KAAK,EAAE,IAAI,CAAC,IAAI,EAChB,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,sBAAsB,CAAC,CAAC,EAC/E,SAAS,EAAE,gBAAgB,GAC3B,CACH,CACG,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { FileInputProps } from '../file-input/interfaces.js';\nimport InternalFileInput from '../file-input/internal.js';\nimport Tooltip from '../internal/components/tooltip/index.js';\nimport { CancelableEventHandler, fireCancelableEvent } from '../internal/events/index.js';\nimport { ButtonGroupProps } from './interfaces.js';\n\nimport testUtilStyles from './test-classes/styles.css.js';\n\ninterface FileInputItemProps {\n  item: ButtonGroupProps.IconFileInput;\n  showTooltip: boolean;\n  onTooltipDismiss: () => void;\n  onFilesChange?: CancelableEventHandler<ButtonGroupProps.FilesChangeDetails>;\n}\n\nconst FileInputItem = forwardRef(\n  ({ item, showTooltip, onTooltipDismiss, onFilesChange }: FileInputItemProps, ref: React.Ref<FileInputProps.Ref>) => {\n    const [files, setFiles] = useState<File[]>([]);\n    const containerRef = React.useRef<HTMLDivElement>(null);\n\n    const canShowTooltip = Boolean(showTooltip);\n\n    return (\n      <div ref={containerRef}>\n        <InternalFileInput\n          className={clsx(testUtilStyles['button-group-item'])}\n          ref={ref}\n          variant=\"icon\"\n          ariaLabel={item.text}\n          accept={item.accept}\n          multiple={item.multiple}\n          value={files}\n          onChange={event => {\n            fireCancelableEvent(onFilesChange, { id: item.id, files: event.detail.value });\n            setFiles(event.detail.value);\n          }}\n          data-testid={item.id}\n          __inputNativeAttributes={{\n            'data-itemid': item.id,\n          }}\n          __inputClassName={testUtilStyles.item}\n        />\n        {canShowTooltip && (\n          <Tooltip\n            trackRef={containerRef}\n            trackKey={item.id}\n            value={item.text}\n            className={clsx(testUtilStyles.tooltip, testUtilStyles['button-group-tooltip'])}\n            onDismiss={onTooltipDismiss}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default FileInputItem;\n"]}