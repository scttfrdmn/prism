import React from 'react';
import { InternalBaseComponentProps } from '../internal/hooks/use-base-component';
import { ButtonProps } from './interfaces';
export type InternalButtonProps = Omit<ButtonProps, 'variant'> & {
  variant?: ButtonProps['variant'] | 'flashbar-icon' | 'breadcrumb-group' | 'menu-trigger' | 'modal-dismiss' | 'inline-icon-pointer-target';
  badge?: boolean;
  analyticsAction?: string;
  __iconClass?: string;
  __focusable?: boolean;
  __injectAnalyticsComponentMetadata?: boolean;
  __title?: string;
  __emitPerformanceMarks?: boolean;
  __skipNativeAttributesWarnings?: boolean;
} & InternalBaseComponentProps;
export declare const InternalButton: React.ForwardRefExoticComponent<Omit<ButtonProps, "variant"> & {
  variant?: ButtonProps['variant'] | 'flashbar-icon' | 'breadcrumb-group' | 'menu-trigger' | 'modal-dismiss' | 'inline-icon-pointer-target';
  badge?: boolean | undefined;
  analyticsAction?: string | undefined;
  __iconClass?: string | undefined;
  __focusable?: boolean | undefined;
  __injectAnalyticsComponentMetadata?: boolean | undefined;
  __title?: string | undefined;
  __emitPerformanceMarks?: boolean | undefined;
  __skipNativeAttributesWarnings?: boolean | undefined;
} & InternalBaseComponentProps & React.RefAttributes<ButtonProps.Ref>>;
export default InternalButton;