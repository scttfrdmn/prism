import React from 'react';
import { ColumnWidthStyle } from '../column-widths-utils';
import { TableProps } from '../interfaces.js';
import { StickyColumnsModel } from '../sticky-columns';
import { TableRole } from '../table-role';
export interface TableTdElementProps {
  wrapLines: boolean | undefined;
  isRowHeader?: boolean;
  isFirstRow: boolean;
  isLastRow: boolean;
  isSelected: boolean;
  isNextSelected: boolean;
  isPrevSelected: boolean;
  nativeAttributes?: Omit<React.TdHTMLAttributes<HTMLTableCellElement> | React.ThHTMLAttributes<HTMLTableCellElement>, 'style' | 'className' | 'onClick'>;
  onClick?: () => void;
  onFocus?: () => void;
  onBlur?: () => void;
  children?: React.ReactNode;
  isEvenRow?: boolean;
  stripedRows?: boolean;
  isSelection?: boolean;
  hasSelection?: boolean;
  hasFooter?: boolean;
  columnId: PropertyKey;
  colIndex: number;
  stickyState: StickyColumnsModel;
  tableRole: TableRole;
  level?: number;
  isExpandable?: boolean;
  isExpanded?: boolean;
  onExpandableItemToggle?: () => void;
  expandButtonLabel?: string;
  collapseButtonLabel?: string;
  verticalAlign?: TableProps.VerticalAlign;
  resizableColumns?: boolean;
  resizableStyle?: ColumnWidthStyle;
  isEditable: boolean;
  isEditing: boolean;
  isEditingDisabled?: boolean;
  hasSuccessIcon?: boolean;
  tableVariant?: string;
}
export declare const TableTdElement: React.ForwardRefExoticComponent<TableTdElementProps & React.RefAttributes<HTMLTableCellElement>>;