import React from 'react';
import { TableProps } from '../interfaces';
export interface ItemsLoaderProps<T> {
  item: null | T;
  trackBy?: TableProps.TrackBy<T>;
  children: React.ReactNode;
}
export interface ItemsLoaderContentProps<T> {
  item: null | T;
  loadingStatus: TableProps.LoadingStatus;
  renderLoaderPending?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;
  renderLoaderLoading?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;
  renderLoaderError?: (detail: TableProps.RenderLoaderDetail<T>) => React.ReactNode;
  renderLoaderEmpty?: (detail: TableProps.RenderLoaderEmptyDetail<T>) => React.ReactNode;
}
export declare function ItemsLoader<T>({
  item,
  trackBy,
  children
}: ItemsLoaderProps<T>): JSX.Element;
export declare function getLoaderContent<T>({
  item,
  loadingStatus,
  renderLoaderPending,
  renderLoaderLoading,
  renderLoaderError,
  renderLoaderEmpty
}: ItemsLoaderContentProps<T>): React.ReactNode;