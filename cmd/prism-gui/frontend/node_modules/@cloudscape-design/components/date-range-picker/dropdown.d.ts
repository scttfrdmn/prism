/// <reference types="react" />
import { CalendarProps } from '../calendar/interfaces';
import { SomeRequired } from '../internal/types';
import { DateRangePickerProps } from './interfaces';
interface DateRangePickerDropdownProps extends Pick<Required<DateRangePickerProps>, 'locale' | 'isDateEnabled' | 'isValidRange' | 'value' | 'relativeOptions' | 'showClearButton' | 'dateOnly' | 'rangeSelectorMode'>, SomeRequired<Pick<DateRangePickerProps, 'startOfWeek' | 'getTimeOffset' | 'absoluteFormat' | 'timeInputFormat' | 'dateInputFormat' | 'timeOffset' | 'ariaLabelledby' | 'ariaDescribedby' | 'i18nStrings' | 'customRelativeRangeUnits' | 'dateDisabledReason'>, 'absoluteFormat' | 'timeInputFormat'>, Pick<CalendarProps, 'granularity'> {
  onClear: () => void;
  onApply: (value: null | DateRangePickerProps.Value) => DateRangePickerProps.ValidationResult;
  onDropdownClose: () => void;
  isSingleGrid: boolean;
  customAbsoluteRangeControl: DateRangePickerProps.AbsoluteRangeControl | undefined;
}
export declare function DateRangePickerDropdown({
  locale,
  startOfWeek,
  isDateEnabled,
  dateDisabledReason,
  isValidRange,
  value,
  onClear: clearValue,
  onApply: applyValue,
  getTimeOffset,
  timeOffset,
  onDropdownClose,
  relativeOptions,
  showClearButton,
  isSingleGrid,
  i18nStrings,
  dateOnly,
  absoluteFormat,
  timeInputFormat,
  dateInputFormat,
  rangeSelectorMode,
  ariaLabelledby,
  ariaDescribedby,
  customAbsoluteRangeControl,
  customRelativeRangeUnits,
  granularity
}: DateRangePickerDropdownProps): JSX.Element;
export {};