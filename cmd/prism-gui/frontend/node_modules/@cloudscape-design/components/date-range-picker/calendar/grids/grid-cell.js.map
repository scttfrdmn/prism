{"version":3,"file":"grid-cell.js","sourceRoot":"","sources":["../../../../../src/date-range-picker/calendar/grids/grid-cell.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAoB,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAE9E,OAAO,EAAE,YAAY,EAAE,MAAM,+CAA+C,CAAC;AAE7E,OAAO,OAAO,MAAM,sCAAsC,CAAC;AAC3D,OAAO,oBAAoB,MAAM,gDAAgD,CAAC;AAClF,OAAO,EAAE,gBAAgB,EAAE,MAAM,4CAA4C,CAAC;AAE9E,OAAO,cAAc,MAAM,kCAAkC,CAAC;AAM9D,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAU,CAAC,CAAC,KAAoB,EAAE,cAA+C,EAAE,EAAE;IAC3G,MAAM,EAAE,cAAc,KAAc,KAAK,EAAd,IAAI,UAAK,KAAK,EAAnC,kBAA2B,CAAQ,CAAC;IAC1C,MAAM,oBAAoB,GAAG,CAAC,CAAC,cAAc,CAAC;IAC9C,MAAM,EAAE,WAAW,EAAE,aAAa,EAAE,GAAG,oBAAoB,CAAC,cAAc,CAAC,CAAC;IAC5E,MAAM,GAAG,GAAG,MAAM,CAAuB,IAAI,CAAC,CAAC;IAC/C,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEtD,OAAO,CACL,0CACE,GAAG,EAAE,YAAY,CAAC,cAAc,EAAE,GAAG,CAAC,IAClC,IAAI,EACJ,CAAC,oBAAoB,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,IAC7C,OAAO,EAAE,KAAK,CAAC,EAAE;YACf,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aACrB;YAED,IAAI,oBAAoB,EAAE;gBACxB,cAAc,CAAC,IAAI,CAAC,CAAC;aACtB;QACH,CAAC,EACD,MAAM,EAAE,KAAK,CAAC,EAAE;YACd,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACpB;YAED,IAAI,oBAAoB,EAAE;gBACxB,cAAc,CAAC,KAAK,CAAC,CAAC;aACvB;QACH,CAAC,EACD,YAAY,EAAE,KAAK,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;YAED,IAAI,oBAAoB,EAAE;gBACxB,cAAc,CAAC,IAAI,CAAC,CAAC;aACtB;QACH,CAAC,EACD,YAAY,EAAE,KAAK,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC1B;YAED,IAAI,oBAAoB,EAAE;gBACxB,cAAc,CAAC,KAAK,CAAC,CAAC;aACvB;QACH,CAAC;QAEA,KAAK,CAAC,QAAQ;QACd,oBAAoB,IAAI,CACvB;YACG,aAAa;YACb,WAAW,IAAI,CACd,oBAAC,OAAO,IACN,SAAS,EAAE,cAAc,CAAC,yBAAyB,CAAC,EACpD,QAAQ,EAAE,GAAG,EACb,KAAK,EAAE,cAAe,EACtB,SAAS,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,KAAK,CAAC,GACtC,CACH,CACA,CACJ,CACE,CACN,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, TdHTMLAttributes, useRef, useState } from 'react';\n\nimport { useMergeRefs } from '@cloudscape-design/component-toolkit/internal';\n\nimport Tooltip from '../../../internal/components/tooltip';\nimport useHiddenDescription from '../../../internal/hooks/use-hidden-description';\nimport { applyDisplayName } from '../../../internal/utils/apply-display-name';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\n\ninterface GridCellProps extends TdHTMLAttributes<HTMLTableCellElement> {\n  disabledReason?: string;\n}\n\nexport const GridCell = forwardRef((props: GridCellProps, focusedDateRef: React.Ref<HTMLTableCellElement>) => {\n  const { disabledReason, ...rest } = props;\n  const isDisabledWithReason = !!disabledReason;\n  const { targetProps, descriptionEl } = useHiddenDescription(disabledReason);\n  const ref = useRef<HTMLTableCellElement>(null);\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <td\n      ref={useMergeRefs(focusedDateRef, ref)}\n      {...rest}\n      {...(isDisabledWithReason ? targetProps : {})}\n      onFocus={event => {\n        if (rest.onFocus) {\n          rest.onFocus(event);\n        }\n\n        if (isDisabledWithReason) {\n          setShowTooltip(true);\n        }\n      }}\n      onBlur={event => {\n        if (rest.onBlur) {\n          rest.onBlur(event);\n        }\n\n        if (isDisabledWithReason) {\n          setShowTooltip(false);\n        }\n      }}\n      onMouseEnter={event => {\n        if (rest.onMouseEnter) {\n          rest.onMouseEnter(event);\n        }\n\n        if (isDisabledWithReason) {\n          setShowTooltip(true);\n        }\n      }}\n      onMouseLeave={event => {\n        if (rest.onMouseLeave) {\n          rest.onMouseLeave(event);\n        }\n\n        if (isDisabledWithReason) {\n          setShowTooltip(false);\n        }\n      }}\n    >\n      {props.children}\n      {isDisabledWithReason && (\n        <>\n          {descriptionEl}\n          {showTooltip && (\n            <Tooltip\n              className={testutilStyles['disabled-reason-tooltip']}\n              trackRef={ref}\n              value={disabledReason!}\n              onDismiss={() => setShowTooltip(false)}\n            />\n          )}\n        </>\n      )}\n    </td>\n  );\n});\n\napplyDisplayName(GridCell, 'GridCell');\n"]}