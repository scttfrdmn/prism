{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/date-range-picker/utils.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { joinDateTime, splitDateTime } from '../internal/utils/date-time';\nimport { isIsoDateOnly, isIsoMonthOnly } from '../internal/utils/date-time';\nimport { normalizeTimeString } from '../internal/utils/date-time/join-date-time';\nimport { DateRangePickerProps } from './interfaces';\nimport { setTimeOffset, shiftTimeOffset } from './time-offset';\n\ntype NormalizedTimeOffset =\n  | {\n      startDate: number;\n      endDate: number;\n    }\n  | {\n      startDate: undefined;\n      endDate: undefined;\n    };\n\nfunction isAbsoluteValue(value: null | DateRangePickerProps.Value): value is DateRangePickerProps.AbsoluteValue {\n  return value !== null && value?.type === 'absolute';\n}\n\nfunction isEmptyAbsoluteValue(value: DateRangePickerProps.AbsoluteValue): boolean {\n  return value.type === 'absolute' && value.startDate === '' && value.endDate === '';\n}\n\nfunction isDateOrMonthOnly(\n  value: DateRangePickerProps.AbsoluteValue,\n  checkFn: typeof isIsoDateOnly | typeof isIsoMonthOnly\n): boolean {\n  return checkFn(value.startDate) && checkFn(value.endDate);\n}\n\nexport function formatValue(\n  value: null | DateRangePickerProps.Value,\n  {\n    timeOffset,\n    monthOnly,\n    dateOnly,\n  }: {\n    timeOffset: NormalizedTimeOffset | null;\n    monthOnly: boolean;\n    dateOnly: boolean;\n  }\n): null | DateRangePickerProps.Value {\n  if (!isAbsoluteValue(value) || isEmptyAbsoluteValue(value)) {\n    return value;\n  }\n\n  if (monthOnly || dateOnly) {\n    const [startPart, endPart] = [value.startDate, value.endDate].map(date =>\n      //strip out time or day+time text from dates\n      monthOnly ? date.split('T')[0].split('-').slice(0, 2).join('-') : date.split('T')[0]\n    );\n    return { type: 'absolute', startDate: startPart, endDate: endPart };\n  }\n\n  return setTimeOffset(\n    value,\n    timeOffset === null\n      ? {\n          startDate: undefined,\n          endDate: undefined,\n        }\n      : timeOffset\n  );\n}\n\nexport function getDefaultMode(\n  value: null | DateRangePickerProps.Value,\n  relativeOptions: readonly DateRangePickerProps.RelativeOption[],\n  rangeSelectorMode: DateRangePickerProps.RangeSelectorMode\n): 'relative' | 'absolute' {\n  if (value?.type) {\n    return value.type;\n  }\n  if (rangeSelectorMode === 'relative-only') {\n    return 'relative';\n  }\n  if (rangeSelectorMode === 'absolute-only') {\n    return 'absolute';\n  }\n  return relativeOptions.length > 0 ? 'relative' : 'absolute';\n}\n\nexport function splitAbsoluteValue(\n  value: null | DateRangePickerProps.AbsoluteValue,\n  hideTime = false\n): DateRangePickerProps.PendingAbsoluteValue {\n  if (!value) {\n    return { start: { date: '', time: '' }, end: { date: '', time: '' } };\n  }\n\n  return {\n    start: {\n      ...splitDateTime(value.startDate),\n      ...(hideTime ? { time: '' } : {}),\n    },\n    end: {\n      ...splitDateTime(value.endDate),\n      ...(hideTime ? { time: '' } : {}),\n    },\n  };\n}\n\nexport function joinAbsoluteValue(\n  value: DateRangePickerProps.PendingAbsoluteValue,\n  hideTime = false\n): DateRangePickerProps.AbsoluteValue {\n  const [startTime, endTime] = [value.start.time || '00:00:00', value.end.time || '23:59:59'].map(normalizeTimeString);\n  return {\n    type: 'absolute',\n    startDate: hideTime ? value.start.date : joinDateTime(value.start.date, startTime),\n    endDate: hideTime ? value.end.date : joinDateTime(value.end.date, endTime),\n  };\n}\n\nexport function formatInitialValue(\n  value: null | DateRangePickerProps.Value,\n  dateOnly: boolean,\n  monthOnly: boolean,\n  normalizedTimeOffset: NormalizedTimeOffset\n): DateRangePickerProps.Value | null {\n  if (!isAbsoluteValue(value)) {\n    return shiftTimeOffset(value, normalizedTimeOffset);\n  }\n  if (isEmptyAbsoluteValue(value)) {\n    return value;\n  }\n  if (dateOnly || monthOnly) {\n    return formatValue(value, { dateOnly, monthOnly, timeOffset: normalizedTimeOffset });\n  }\n  if (isDateOrMonthOnly(value, isIsoDateOnly) || isDateOrMonthOnly(value, isIsoMonthOnly)) {\n    return value;\n  }\n  return shiftTimeOffset(value, normalizedTimeOffset);\n}\n"]}