import { ComponentWrapper, ElementWrapper } from "@cloudscape-design/test-utils-core/selectors";
declare class TreeViewItemWrapper extends ComponentWrapper {
  /**
   * Finds the content slot of the tree view item.
   */
  findContent(): ElementWrapper;
  /**
   * Finds the icon slot of the tree view item.
   */
  findIcon(): ElementWrapper;
  /**
   * Finds the secondary content slot of the tree view item.
   */
  findSecondaryContent(): ElementWrapper;
  /**
   * Finds the actions slot of the tree view item.
   */
  findActions(): ElementWrapper;
  /**
   * Finds the expand toggle of the tree view item.
   */
  findItemToggle(): ElementWrapper;
  /**
   * Finds all visible child items of the tree view item.
   * @param options
   * * expanded (optional, boolean) - Use it to find all visible expanded or collapsed child items.
   */
  findChildItems(options?: {
    expanded?: boolean;
  }): import("@cloudscape-design/test-utils-core/selectors").MultiElementWrapper<TreeViewItemWrapper>;
  /**
   * Finds a visible child item by its ID.
   * @param id of the item to find
   * @param options
   * * expanded (optional, boolean) - Use it to find the visible expanded or collapsed child item.
   */
  findChildItemById(id: string, options?: {
    expanded?: boolean;
  }): TreeViewItemWrapper | null;
}
export default class TreeViewWrapper extends ComponentWrapper {
  static rootSelector: string;
  /**
   * Finds all visible tree view items.
   * @param options
   * * expanded (optional, boolean) - Use it to find all visible expanded or collapsed items.
   */
  findItems(options?: {
    expanded?: boolean;
  }): import("@cloudscape-design/test-utils-core/selectors").MultiElementWrapper<TreeViewItemWrapper>;
  /**
   * Finds a visible tree view item by its ID.
   * @param id of the item to find
   * @param options
   * * expanded (optiona, boolean) - Use it to find the visible expanded or collapsed item.
   */
  findItemById(id: string, options?: {
    expanded?: boolean;
  }): TreeViewItemWrapper | null;
}
export {};