{"version":3,"file":"all-items-dropdown.js","sourceRoot":"","sources":["../../../src/breadcrumb-group/all-items-dropdown.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { Ref } from 'react';\nimport clsx from 'clsx';\n\nimport { CustomTriggerProps } from '../button-dropdown/interfaces';\nimport InternalButtonDropdown from '../button-dropdown/internal';\nimport InternalIcon from '../icon/internal';\nimport { DATA_ATTR_FUNNEL_KEY, DATA_ATTR_RESOURCE_TYPE, FUNNEL_KEY_FUNNEL_NAME } from '../internal/analytics/selectors';\nimport { CancelableEventHandler } from '../internal/events';\nimport { spinWhenOpen } from '../internal/styles/motion/utils';\nimport { BreadcrumbGroupProps } from './interfaces';\n\nimport styles from './styles.css.js';\n\ninterface FullCollapsedDropdownProps {\n  items: ReadonlyArray<BreadcrumbGroupProps.Item>;\n  onItemClick: CancelableEventHandler<{ id: string }>;\n  onItemFollow: CancelableEventHandler<{ id: string }>;\n}\n\nconst metadataTypeAttribute = {\n  [DATA_ATTR_RESOURCE_TYPE]: 'true',\n};\n\nexport const AllItemsDropdown = ({ items, onItemClick, onItemFollow }: FullCollapsedDropdownProps) => (\n  <>\n    <InternalButtonDropdown\n      items={items.map((item, index) => {\n        const isCurrentBreadcrumb = index === items.length - 1;\n        return {\n          id: index.toString(),\n          text: item.text,\n          href: isCurrentBreadcrumb ? undefined : item.href,\n          isCurrentBreadcrumb,\n        };\n      })}\n      customTriggerBuilder={getDropdownTrigger(items[items.length - 1]?.text)}\n      linkStyle={true}\n      fullWidth={true}\n      onItemClick={onItemClick}\n      onItemFollow={onItemFollow}\n      analyticsMetadataTransformer={metadata => {\n        if (metadata.detail?.id) {\n          delete metadata.detail.id;\n        }\n        if (metadata.detail?.position) {\n          metadata.detail.position = `${parseInt(metadata.detail.position as string, 10) + 1}`;\n        }\n        return metadata;\n      }}\n    />\n    {/* Second breadcrumb item is tagged as \"resource type\" */}\n    {items.length > 1 && (\n      <span className={styles.hidden} {...metadataTypeAttribute}>\n        {items[1].text}\n      </span>\n    )}\n  </>\n);\nconst getDropdownTrigger =\n  (currentPage: string) =>\n  ({ ariaLabel, triggerRef, testUtilsClass, isOpen, onClick }: CustomTriggerProps) => {\n    const metadataAttributes = {\n      [DATA_ATTR_FUNNEL_KEY]: FUNNEL_KEY_FUNNEL_NAME,\n    };\n    return (\n      <button\n        ref={triggerRef as Ref<HTMLButtonElement>}\n        {...metadataAttributes}\n        className={clsx(styles['collapsed-button'], testUtilsClass)}\n        onClick={event => {\n          event.preventDefault();\n          onClick();\n        }}\n        aria-expanded={isOpen}\n        aria-haspopup={true}\n        aria-label={ariaLabel}\n        formAction=\"none\"\n      >\n        <InternalIcon name=\"caret-down-filled\" className={spinWhenOpen(styles, 'button-icon', isOpen)} />\n        <span>{currentPage}</span>\n      </button>\n    );\n  };\n"]}