{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/multiselect/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { OptionDefinition, OptionGroup as OptionGroupDefinition } from '../internal/components/option/interfaces';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { BaseSelectProps } from '../select/interfaces';\n\nexport interface MultiselectProps extends BaseSelectProps {\n  /**\n   * Specifies the currently selected options.\n   * Provide an empty array to clear the selection.\n   */\n  selectedOptions: ReadonlyArray<MultiselectProps.Option>;\n  /**\n   * Specifies an inline label that appears next to the multiselect trigger.\n   */\n  inlineLabelText?: string;\n  /**\n   * Determines whether the dropdown list stays open after the user selects an item.\n   */\n  keepOpen?: boolean;\n  /**\n   * Specifies the maximum number of displayed tokens. If the property isn't set, all of the tokens are displayed.\n   */\n  tokenLimit?: number;\n  /**\n   * Hides the tokens displayed underneath the component.\n   * Only use this if the selected options are displayed elsewhere on the page.\n   */\n  hideTokens?: boolean;\n  /**\n   * Shows tokens inside the trigger instead of below it.\n   */\n  inlineTokens?: boolean;\n  /**\n   * Specifies an `aria-label` for the token deselection button.\n   * @i18n\n   */\n  deselectAriaLabel?: MultiselectProps.DeselectAriaLabelFunction;\n  /**\n   * An object containing all the localized strings required by the component.\n   *\n   * * `selectAllText` (string) - Specifies the text to be displayed next to the checkbox that selects or deselects all options.\n   * * `tokenLimitShowFewer` (string) - Specifies the text to be displayed in the \"Show fewer\" button for the token group control.\n   * * `tokenLimitShowMore` (string) - Specifies the text to be displayed in the \"Show more\" button for the token group control. This string should not contain the number of hidden tokens\n   * because this will be added by the component automatically.\n   * @i18n\n   */\n  i18nStrings?: MultiselectProps.I18nStrings;\n  /**\n   * Called when the user selects or deselects an option.\n   * The event `detail` contains the current `selectedOptions`.\n   */\n  onChange?: NonCancelableEventHandler<MultiselectProps.MultiselectChangeDetail>;\n\n  /**\n   * Automatically focuses the trigger when component is mounted.\n   */\n  autoFocus?: boolean;\n\n  /**\n   * Adds an aria-label to the \"Show fewer\" button for the token group control.\n   * Use to assign unique labels when there are multiple token groups with the same `tokenLimitShowFewer` label on one page.\n   */\n  tokenLimitShowFewerAriaLabel?: string;\n  /**\n   * Adds an aria-label to the \"Show more\" button for the token group control.\n   * Use to assign unique labels when there are multiple token groups with the same `tokenLimitShowMore` label on one page.\n   */\n  tokenLimitShowMoreAriaLabel?: string;\n  /**\n   * Enables users to select and deselect all options with a special extra checkbox which is displayed at the start of the dropdown.\n   */\n  enableSelectAll?: boolean;\n}\n\nexport namespace MultiselectProps {\n  export type Option = OptionDefinition;\n  export type OptionGroup = OptionGroupDefinition;\n  export type Options = ReadonlyArray<Option | OptionGroup>;\n  export type DeselectAriaLabelFunction = (option: Option) => string;\n  export type TriggerVariant = 'placeholder' | 'tokens';\n\n  export interface I18nStrings {\n    selectAllText?: string;\n    tokenLimitShowFewer?: string;\n    tokenLimitShowMore?: string;\n  }\n\n  export interface MultiselectChangeDetail {\n    selectedOptions: ReadonlyArray<Option>;\n  }\n\n  export interface Ref {\n    /**\n     * Sets focus on the element without opening the dropdown or showing a visual focus indicator.\n     */\n    focus(): void;\n  }\n}\n"]}