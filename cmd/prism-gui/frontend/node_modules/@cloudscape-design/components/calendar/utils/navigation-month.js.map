{"version":3,"file":"navigation-month.js","sourceRoot":"","sources":["../../../../src/calendar/utils/navigation-month.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAIjF,MAAM,UAAU,aAAa,CAAC,SAAe,EAAE,eAAoD;IACjG,OAAO,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,SAAe,EAAE,eAAoD;IACjG,OAAO,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,SAAe,EAAE,eAAoD;IACjG,OAAO,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,SAAe,EAAE,eAAoD;IAC/F,OAAO,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC;AAED,2EAA2E;AAC3E,8EAA8E;AAC9E,MAAM,UAAU,YAAY,CAAC,IAAU,EAAE,eAAoD;IAC3F,MAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IACpC,IAAI,eAAe,CAAC,SAAS,CAAC,EAAE;QAC9B,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,gBAAgB,GAAG,SAAS,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;IAClE,OAAO,UAAU,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;AAChF,CAAC;AAED,8EAA8E;AAC9E,+EAA+E;AAC/E,MAAM,UAAU,SAAS,CAAC,SAAe,EAAE,eAAoD,EAAE,IAAY;IAC3G,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,IAAI,OAAO,GAAG,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAEzC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;QAChC,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,GAAG,UAAU,EAAE;YAChE,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,GAAG,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KACpC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { addMonths, differenceInYears, isSameYear, startOfYear } from 'date-fns';\n\nimport { CalendarProps } from '../interfaces';\n\nexport function moveNextMonth(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveMonth(startDate, isDateFocusable, 1);\n}\n\nexport function movePrevMonth(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveMonth(startDate, isDateFocusable, -1);\n}\n\nexport function moveMonthDown(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveMonth(startDate, isDateFocusable, 3);\n}\n\nexport function moveMonthUp(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveMonth(startDate, isDateFocusable, -3);\n}\n\n// Returns first enabled month of the year corresponding to the given date.\n// If all year's months are disabled, the first month of the year is returned.\nexport function getBaseMonth(date: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  const startDate = startOfYear(date);\n  if (isDateFocusable(startDate)) {\n    return startDate;\n  }\n  const firstEnabledDate = moveMonth(startDate, isDateFocusable, 1);\n  return isSameYear(startDate, firstEnabledDate) ? firstEnabledDate : startDate;\n}\n\n// Iterates months forwards or backwards until the next active month is found.\n// If there is no active month in a 10 year range, the start month is returned.\nexport function moveMonth(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction, step: number): Date {\n  const limitYears = 10;\n  let current = addMonths(startDate, step);\n\n  while (!isDateFocusable(current)) {\n    if (Math.abs(differenceInYears(startDate, current)) > limitYears) {\n      return startDate;\n    }\n    current = addMonths(current, step);\n  }\n\n  return current;\n}\n"]}