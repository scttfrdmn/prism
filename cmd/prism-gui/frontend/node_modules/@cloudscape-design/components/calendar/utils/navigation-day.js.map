{"version":3,"file":"navigation-day.js","sourceRoot":"","sources":["../../../../src/calendar/utils/navigation-day.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AAIjF,MAAM,UAAU,WAAW,CAAC,SAAe,EAAE,eAAoD;IAC/F,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,SAAe,EAAE,eAAoD;IAC/F,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,SAAe,EAAE,eAAoD;IAChG,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,SAAe,EAAE,eAAoD;IAChG,OAAO,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC;AAED,2EAA2E;AAC3E,4EAA4E;AAC5E,MAAM,UAAU,UAAU,CAAC,IAAU,EAAE,eAAoD;IACzF,MAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAErC,IAAI,eAAe,CAAC,SAAS,CAAC,EAAE;QAC9B,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,gBAAgB,GAAG,OAAO,CAAC,SAAS,EAAE,eAAe,EAAE,CAAC,CAAC,CAAC;IAChE,OAAO,WAAW,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,CAAC;AACjF,CAAC;AAED,0EAA0E;AAC1E,wEAAwE;AACxE,MAAM,UAAU,OAAO,CAAC,SAAe,EAAE,eAAoD,EAAE,IAAY;IACzG,MAAM,UAAU,GAAG,CAAC,CAAC;IAErB,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAEvC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;QAChC,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,GAAG,UAAU,EAAE;YAChE,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAClC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { addDays, differenceInYears, isSameMonth, startOfMonth } from 'date-fns';\n\nimport { CalendarProps } from '../interfaces';\n\nexport function moveNextDay(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveDay(startDate, isDateFocusable, 1);\n}\n\nexport function movePrevDay(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveDay(startDate, isDateFocusable, -1);\n}\n\nexport function moveNextWeek(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveDay(startDate, isDateFocusable, 7);\n}\n\nexport function movePrevWeek(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  return moveDay(startDate, isDateFocusable, -7);\n}\n\n// Returns first enabled date of the month corresponding to the given date.\n// If all month's days are disabled, the first day of the month is returned.\nexport function getBaseDay(date: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction) {\n  const startDate = startOfMonth(date);\n\n  if (isDateFocusable(startDate)) {\n    return startDate;\n  }\n  const firstEnabledDate = moveDay(startDate, isDateFocusable, 1);\n  return isSameMonth(startDate, firstEnabledDate) ? firstEnabledDate : startDate;\n}\n\n// Iterates days forwards or backwards until the next active day is found.\n// If there is no active day in a year range, the start day is returned.\nexport function moveDay(startDate: Date, isDateFocusable: CalendarProps.IsDateEnabledFunction, step: number): Date {\n  const limitYears = 1;\n\n  let current = addDays(startDate, step);\n\n  while (!isDateFocusable(current)) {\n    if (Math.abs(differenceInYears(startDate, current)) > limitYears) {\n      return startDate;\n    }\n    current = addDays(current, step);\n  }\n\n  return current;\n}\n"]}