{"version":3,"file":"use-discovered-content.js","sourceRoot":"","sources":["../../../../../src/internal/plugins/helpers/use-discovered-content.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\n\nimport {\n  AlertFlashContentApiInternal,\n  AlertFlashContentResult,\n  ReplacementType,\n} from '../controllers/alert-flash-content';\nimport { reportRuntimeApiWarning } from './metrics';\n\nexport function createUseDiscoveredContent(componentName: string, controller: AlertFlashContentApiInternal) {\n  return function useDiscoveredContent({\n    type,\n    header,\n    children,\n  }: {\n    type: string;\n    header: React.ReactNode;\n    children: React.ReactNode;\n  }) {\n    const instanceId = useUniqueId(`${componentName}-discovered-content`);\n    const headerRef = useRef<HTMLDivElement>(null);\n    const contentRef = useRef<HTMLDivElement>(null);\n    const replacementHeaderRef = useRef<HTMLDivElement>(null);\n    const replacementContentRef = useRef<HTMLDivElement>(null);\n    const [initialHidden, setInitialHidden] = useState(() =>\n      controller.initialCheck({\n        instanceId,\n        type,\n        header,\n        content: children,\n      })\n    );\n    const [headerReplacementType, setFoundHeaderReplacement] = useState<ReplacementType>('original');\n    const [contentReplacementType, setFoundContentReplacement] = useState<ReplacementType>('original');\n    const mountedProvider = useRef<AlertFlashContentResult | undefined>();\n\n    useEffect(() => {\n      const context = { instanceId, type, headerRef, contentRef };\n\n      setInitialHidden(false);\n\n      return controller.onContentRegistered(provider => {\n        let mounted = true;\n\n        function checkMounted(methodName: string) {\n          if (!mounted) {\n            reportRuntimeApiWarning(\n              `${componentName}-content-replacer`,\n              `\"${methodName}\" called after component unmounted`\n            );\n            return false;\n          }\n          return true;\n        }\n\n        mountedProvider.current = provider.runReplacer(context, {\n          hideHeader() {\n            if (checkMounted('hideHeader')) {\n              setFoundHeaderReplacement('remove');\n            }\n          },\n          restoreHeader() {\n            if (checkMounted('restoreHeader')) {\n              setFoundHeaderReplacement('original');\n            }\n          },\n          replaceHeader(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceHeader')) {\n              replacer(replacementHeaderRef.current!);\n              setFoundHeaderReplacement('replaced');\n            }\n          },\n          hideContent() {\n            if (checkMounted('hideContent')) {\n              setFoundContentReplacement('remove');\n            }\n          },\n          restoreContent() {\n            if (checkMounted('restoreContent')) {\n              setFoundContentReplacement('original');\n            }\n          },\n          replaceContent(replacer: (container: HTMLElement) => void) {\n            if (checkMounted('replaceContent')) {\n              replacer(replacementContentRef.current!);\n              setFoundContentReplacement('replaced');\n            }\n          },\n        });\n\n        return () => {\n          mountedProvider.current?.unmount({\n            replacementHeaderContainer: replacementHeaderRef.current!,\n            replacementContentContainer: replacementContentRef.current!,\n          });\n          mounted = false;\n        };\n      });\n    }, [instanceId, type]);\n\n    useEffect(() => {\n      mountedProvider.current?.update();\n    }, [type, header, children]);\n\n    return {\n      initialHidden,\n      headerReplacementType,\n      contentReplacementType,\n      headerRef: headerRef as React.Ref<HTMLDivElement>,\n      replacementHeaderRef: replacementHeaderRef as React.Ref<HTMLDivElement>,\n      contentRef: contentRef as React.Ref<HTMLDivElement>,\n      replacementContentRef: replacementContentRef as React.Ref<HTMLDivElement>,\n    };\n  };\n}\n"]}