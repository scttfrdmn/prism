{"version":3,"file":"parse-count-text.js","sourceRoot":"","sources":["../../../../../src/internal/analytics/utils/parse-count-text.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,SAA6B,EAAsB,EAAE;IACnF,IAAI,CAAC,SAAS,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QAC/C,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,MAAM,GAAG,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC7E,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAClC,OAAO,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACpD,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Extracts the count value from table header/filter text.\n *\n * Parses various counter string formats and extracts the relevant numeric value:\n * - \"Items (100)\" - Extracts 100 (first number found)\n * - \"1/100\" - Extracts 100 (denominator of fraction, representing total count)\n * - \"100+\" - Extracts 100 (first number found)\n */\nexport const parseCountValue = (countText: string | undefined): number | undefined => {\n  if (!countText || typeof countText !== 'string') {\n    return undefined;\n  }\n\n  const target = countText.includes('/') ? countText.split('/')[1] : countText;\n  const match = target.match(/\\d+/);\n  return match ? parseInt(match[0], 10) : undefined;\n};\n"]}