{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/use-effect-on-update/index.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAkC,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE1E,4CAA4C;AAC5C,MAAM,UAAU,iBAAiB,CAAC,QAAwB,EAAE,IAAoB;IAC9E,MAAM,eAAe,GAAG,MAAM,CAAwB,IAAI,CAAC,CAAC;IAE5D,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC;QAC7C,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;QAE/B,2CAA2C;QAC3C,IAAI,YAAY,KAAK,IAAI,EAAE;YACzB,OAAO;SACR;QACD,mFAAmF;QACnF,yEAAyE;QACzE,IAAI,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE;YACnC,wDAAwD;YACxD,uBAAuB;YACvB,OAAO;SACR;QACD,OAAO,QAAQ,EAAE,CAAC;QAClB,oEAAoE;QACpE,uDAAuD;IACzD,CAAC,EAAE,IAAI,CAAC,CAAC;AACX,CAAC;AAED,SAAS,WAAW,CAAC,IAAoB,EAAE,IAAoB;IAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE;QAC3D,yGAAyG;QACzG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;KACF;IACD,wDAAwD;IACxD,uBAAuB;IACvB,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { DependencyList, EffectCallback, useEffect, useRef } from 'react';\n\n// useEffect, which skips the initial render\nexport function useEffectOnUpdate(callback: EffectCallback, deps: DependencyList) {\n  const previousDepsRef = useRef<null | DependencyList>(null);\n\n  useEffect(() => {\n    const previousDeps = previousDepsRef.current;\n    previousDepsRef.current = deps;\n\n    // The initial render is ignored by design.\n    if (previousDeps === null) {\n      return;\n    }\n    // In React 18 strict mode the useEffect callback is executed twice. We prevent the\n    // callback from firing in case the dependencies did not actually change.\n    if (isDepsEqual(previousDeps, deps)) {\n      // This line is only reachable in React 18+ strict mode.\n      // istanbul ignore next\n      return;\n    }\n    return callback();\n    // This is a useEffect extension, will be validated at the call site\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\nfunction isDepsEqual(prev: DependencyList, next: DependencyList) {\n  for (let i = 0; i < Math.max(prev.length, next.length); i++) {\n    // This is how React compared dependencies, documented here: https://react.dev/reference/react/useEffect.\n    if (!Object.is(prev[i], next[i])) {\n      return false;\n    }\n  }\n  // This line is only reachable in React 18+ strict mode.\n  // istanbul ignore next\n  return true;\n}\n"]}