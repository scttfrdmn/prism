{"version":3,"file":"use-live-announcements.js","sourceRoot":"","sources":["../../../../../src/internal/components/sortable-area/use-live-announcements.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAO/B,MAAM,CAAC,MAAM,gBAAgB,GAGzB,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;AAC/D,MAAM,CAAC,MAAM,sBAAsB,GAG/B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,CACxD,MAAM,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAG,eAAe,KAAK,eAAe,EAAE,EAAE,CAAC,CAAC;AAClG,MAAM,CAAC,MAAM,sBAAsB,GAG/B,MAAM,CAAC,EAAE,CAAC,CAAC,eAAe,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,CACtD,MAAM,CAAC;IACL,eAAe;IACf,aAAa;IACb,KAAK;IACL,iBAAiB,EAAE,GAAG,eAAe,KAAK,aAAa,EAAE;CAC1D,CAAC,CAAC;AAEL,MAAM,CAAC,OAAO,UAAU,oBAAoB,CAAO,EACjD,KAAK,EACL,cAAc,EACd,UAAU,EACV,0BAA0B,EAC1B,gCAAgC,EAChC,gCAAgC,EAChC,4BAA4B,GAKU;IACtC,MAAM,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,CAAC,UAAU,EAAE;QACf,mBAAmB,CAAC,OAAO,GAAG,IAAI,CAAC;KACpC;IAED,OAAO;QACL,WAAW,CAAC,EAAE,MAAM,EAAkB;YACpC,IAAI,MAAM,IAAI,0BAA0B,EAAE;gBACxC,MAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBAC7E,OAAO,0BAA0B,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;aAC5D;QACH,CAAC;QACD,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAiB;YACxC,IAAI,gCAAgC,EAAE;gBACpC,gFAAgF;gBAChF,IAAI,mBAAmB,CAAC,OAAO,EAAE;oBAC/B,mBAAmB,CAAC,OAAO,GAAG,KAAK,CAAC;oBACpC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE;wBAClC,OAAO;qBACR;iBACF;gBACD,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBACpF,MAAM,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBACvG,OAAO,gCAAgC,CAAC,YAAY,GAAG,CAAC,EAAE,WAAW,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;aAC1F;QACH,CAAC;QACD,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,EAAgB;YACtC,IAAI,gCAAgC,EAAE;gBACpC,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,CAAC;gBACpF,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gBACtG,OAAO,gCAAgC,CAAC,YAAY,GAAG,CAAC,EAAE,UAAU,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;aACzF;QACH,CAAC;QACD,YAAY;YACV,OAAO,4BAA4B,CAAC;QACtC,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { DragEndEvent, DragOverEvent, DragStartEvent } from '@dnd-kit/core';\n\nimport { CustomHandler } from '../../../i18n/context';\nimport { I18nFormatArgTypes } from '../../../i18n/messages-types';\nimport { SortableAreaProps } from './interfaces';\n\nexport const formatDndStarted: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndStarted'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndStarted']\n> = format => (position, total) => format({ position, total });\nexport const formatDndItemReordered: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndItemReordered'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndItemReordered']\n> = format => (initialPosition, currentPosition, total) =>\n  format({ currentPosition, total, isInitialPosition: `${initialPosition === currentPosition}` });\nexport const formatDndItemCommitted: CustomHandler<\n  SortableAreaProps.DndAreaI18nStrings['liveAnnouncementDndItemCommitted'],\n  I18nFormatArgTypes['list']['liveAnnouncementDndItemCommitted']\n> = format => (initialPosition, finalPosition, total) =>\n  format({\n    initialPosition,\n    finalPosition,\n    total,\n    isInitialPosition: `${initialPosition === finalPosition}`,\n  });\n\nexport default function useLiveAnnouncements<Item>({\n  items,\n  itemDefinition,\n  isDragging,\n  liveAnnouncementDndStarted,\n  liveAnnouncementDndItemReordered,\n  liveAnnouncementDndItemCommitted,\n  liveAnnouncementDndDiscarded,\n}: {\n  items: readonly Item[];\n  itemDefinition: SortableAreaProps.ItemDefinition<Item>;\n  isDragging: boolean;\n} & SortableAreaProps.DndAreaI18nStrings) {\n  const isFirstAnnouncement = useRef(true);\n  if (!isDragging) {\n    isFirstAnnouncement.current = true;\n  }\n\n  return {\n    onDragStart({ active }: DragStartEvent) {\n      if (active && liveAnnouncementDndStarted) {\n        const index = items.findIndex(item => itemDefinition.id(item) === active.id);\n        return liveAnnouncementDndStarted(index + 1, items.length);\n      }\n    },\n    onDragOver({ active, over }: DragOverEvent) {\n      if (liveAnnouncementDndItemReordered) {\n        // Don't announce on the first dragOver because it's redundant with onDragStart.\n        if (isFirstAnnouncement.current) {\n          isFirstAnnouncement.current = false;\n          if (!over || over.id === active.id) {\n            return;\n          }\n        }\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const currentIdex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemReordered(initialIndex + 1, currentIdex + 1, items.length);\n      }\n    },\n    onDragEnd({ active, over }: DragEndEvent) {\n      if (liveAnnouncementDndItemCommitted) {\n        const initialIndex = items.findIndex(item => itemDefinition.id(item) === active.id);\n        const finalIndex = over ? items.findIndex(item => itemDefinition.id(item) === over.id) : initialIndex;\n        return liveAnnouncementDndItemCommitted(initialIndex + 1, finalIndex + 1, items.length);\n      }\n    },\n    onDragCancel() {\n      return liveAnnouncementDndDiscarded;\n    },\n  };\n}\n"]}