{"version":3,"file":"unflatten-options.js","sourceRoot":"","sources":["../../../../../../src/internal/components/option/utils/unflatten-options.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAmBtC,MAAM,UAAU,gBAAgB,CAAC,OAAsC;IACrE,MAAM,aAAa,GAA2B,EAAE,CAAC;IACjD,IAAI,aAA+C,CAAC;IAEpD,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;;QAChC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,OAAO,GAAyB,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;YACtF,aAAa,GAAG,OAAO,CAAC;YACxB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7B;aAAM,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;YAClD,CAAC,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,QAAQ,mCAAI,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACnF;aAAM;YACL,aAAa,GAAG,SAAS,CAAC;YAC1B,aAAa,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;SACtD;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,aAAa,CAAC;AACvB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { DropdownOption } from '../interfaces';\n\ninterface ParentDropdownOption {\n  type: 'parent';\n  index: number;\n  option: DropdownOption;\n  children: ChildDropdownOption[];\n}\n\ninterface ChildDropdownOption {\n  type: 'child';\n  index: number;\n  option: DropdownOption;\n}\n\nexport type NestedDropdownOption = ParentDropdownOption | ChildDropdownOption;\n\nexport function unflattenOptions(options: ReadonlyArray<DropdownOption>): NestedDropdownOption[] {\n  const nestedOptions: NestedDropdownOption[] = [];\n  let currentParent: ParentDropdownOption | undefined;\n\n  options.forEach((option, index) => {\n    if (option.type === 'parent') {\n      const wrapped: ParentDropdownOption = { type: 'parent', option, index, children: [] };\n      currentParent = wrapped;\n      nestedOptions.push(wrapped);\n    } else if (!option.type || option.type === 'child') {\n      (currentParent?.children ?? nestedOptions).push({ type: 'child', option, index });\n    } else {\n      currentParent = undefined;\n      nestedOptions.push({ type: 'child', option, index });\n    }\n  });\n\n  return nestedOptions;\n}\n"]}