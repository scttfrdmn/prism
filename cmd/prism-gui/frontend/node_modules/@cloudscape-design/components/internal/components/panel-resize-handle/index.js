// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React from 'react';
import clsx from 'clsx';
import InternalDragHandle from '../drag-handle';
import styles from './styles.css.js';
export default React.forwardRef(function PanelResizeHandle({ className, ariaLabel, tooltipText, ariaValuenow, position, onDirectionClick, onKeyDown, onPointerDown, disabled }, ref) {
    return (React.createElement(InternalDragHandle, { className: clsx(className, styles.slider, styles[`slider-${position}`]), ariaLabel: ariaLabel, tooltipText: tooltipText, ariaValue: { valueMin: 0, valueMax: 100, valueNow: ariaValuenow !== null && ariaValuenow !== void 0 ? ariaValuenow : 0 }, variant: ['side', 'side-start'].includes(position) ? 'resize-horizontal' : 'resize-vertical', directions: disabled
            ? {
                'inline-start': 'disabled',
                'inline-end': 'disabled',
            }
            : position === 'side'
                ? {
                    'inline-end': ariaValuenow === 0 ? 'disabled' : 'active',
                    'inline-start': ariaValuenow === 100 ? 'disabled' : 'active',
                }
                : position === 'side-start'
                    ? {
                        'inline-end': ariaValuenow === 100 ? 'disabled' : 'active',
                        'inline-start': ariaValuenow === 0 ? 'disabled' : 'active',
                    }
                    : {
                        'block-end': ariaValuenow === 0 ? 'disabled' : 'active',
                        'block-start': ariaValuenow === 100 ? 'disabled' : 'active',
                    }, onDirectionClick: onDirectionClick, onKeyDown: onKeyDown, onPointerDown: onPointerDown, ref: ref }));
});
//# sourceMappingURL=index.js.map