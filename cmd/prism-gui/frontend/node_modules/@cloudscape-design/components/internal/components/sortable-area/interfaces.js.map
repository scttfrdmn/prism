{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../../src/internal/components/sortable-area/interfaces.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { NonCancelableEventHandler } from '../../events';\nimport { DragHandleProps } from '../drag-handle/interfaces';\n\nexport interface SortableAreaProps<Item> {\n  items: readonly Item[];\n  itemDefinition: SortableAreaProps.ItemDefinition<Item>;\n  renderItem: (props: SortableAreaProps.RenderItemProps<Item>) => React.ReactNode;\n  onItemsChange?: NonCancelableEventHandler<SortableAreaProps.ItemsChangeDetail<Item>>;\n  i18nStrings?: SortableAreaProps.DndAreaI18nStrings;\n  disableReorder?: boolean;\n}\n\nexport namespace SortableAreaProps {\n  export interface ItemDefinition<Item> {\n    id: (item: Item) => string;\n    label: (item: Item) => string;\n    borderRadius?: BorderRadiusVariant;\n  }\n\n  export type BorderRadiusVariant = 'item' | 'container';\n\n  export interface RenderItemProps<Item> {\n    ref?: React.RefCallback<HTMLElement>;\n    item: Item;\n    id: string;\n    style: React.CSSProperties;\n    className?: string;\n    isDropPlaceholder: boolean;\n    isSortingActive: boolean;\n    isDragGhost: boolean;\n    dragHandleProps: DragHandleProps;\n  }\n\n  export interface ItemsChangeDetail<Item> {\n    items: Item[];\n    movedItem: Item;\n  }\n\n  export interface DndAreaI18nStrings {\n    liveAnnouncementDndStarted?: (position: number, total: number) => string;\n    liveAnnouncementDndItemReordered?: (initialPosition: number, currentPosition: number, total: number) => string;\n    liveAnnouncementDndItemCommitted?: (initialPosition: number, finalPosition: number, total: number) => string;\n    liveAnnouncementDndDiscarded?: string;\n    dragHandleAriaLabel?: string;\n    dragHandleAriaDescription?: string;\n  }\n}\n"]}