// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
'use client';
import { __rest } from "tslib";
import React from 'react';
import useBaseComponent from '../internal/hooks/use-base-component';
import { applyDisplayName } from '../internal/utils/apply-display-name';
import InternalAttributeEditor from './internal';
const AttributeEditor = React.forwardRef((_a, ref) => {
    var _b, _c;
    var { items = [], addButtonVariant = 'normal', isItemRemovable = () => true } = _a, props = __rest(_a, ["items", "addButtonVariant", "isItemRemovable"]);
    const baseComponentProps = useBaseComponent('AttributeEditor', {
        props: {
            addButtonVariant: addButtonVariant,
        },
        metadata: {
            definitionItems: (_c = (_b = props.definition) === null || _b === void 0 ? void 0 : _b.length) !== null && _c !== void 0 ? _c : null,
            hasGridLayout: !!props.gridLayout,
            hasCustomRowActions: !!props.customRowActions,
        },
    });
    return (React.createElement(InternalAttributeEditor, Object.assign({ items: items, isItemRemovable: isItemRemovable, addButtonVariant: addButtonVariant }, props, baseComponentProps, { ref: ref })));
});
applyDisplayName(AttributeEditor, 'AttributeEditor');
export default AttributeEditor;
//# sourceMappingURL=index.js.map