{"version":3,"file":"row.js","sourceRoot":"","sources":["../../../src/attribute-editor/row.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback } from 'react';\nimport clsx from 'clsx';\n\nimport { useUniqueId } from '@cloudscape-design/component-toolkit/internal';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport InternalFormField from '../form-field/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { Breakpoint } from '../internal/breakpoints';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { AttributeEditorProps } from './interfaces';\nimport { getItemGridColumns, getRemoveButtonGridColumns, isRemoveButtonOnSameLine } from './utils';\n\nimport styles from './styles.css.js';\n\ninterface RowProps<T> {\n  breakpoint: Breakpoint | null;\n  layout: AttributeEditorProps.GridLayout;\n  item: T;\n  definition: ReadonlyArray<AttributeEditorProps.FieldDefinition<T>>;\n  i18nStrings: AttributeEditorProps.I18nStrings | undefined;\n  index: number;\n  removable: boolean;\n  removeButtonText?: string;\n  removeButtonRefs: Array<ButtonProps.Ref | undefined>;\n  customRowActions?: (props: AttributeEditorProps.RowActionsProps<T>) => React.ReactNode;\n  onRemoveButtonClick?: NonCancelableEventHandler<AttributeEditorProps.RemoveButtonClickDetail>;\n  removeButtonAriaLabel?: (item: T) => string;\n}\n\nfunction render<T>(\n  item: T,\n  itemIndex: number,\n  slot: AttributeEditorProps.FieldRenderable<T> | React.ReactNode | undefined\n) {\n  if (isSlotFunction(slot)) {\n    return slot(item, itemIndex);\n  }\n  return slot;\n\n  function isSlotFunction(slot: unknown): slot is AttributeEditorProps.FieldRenderable<T> {\n    return typeof slot === 'function';\n  }\n}\n\nexport const Row = React.memo(\n  <T,>({\n    breakpoint,\n    item,\n    definition,\n    layout,\n    i18nStrings = {},\n    index,\n    removable,\n    removeButtonText,\n    removeButtonRefs,\n    customRowActions,\n    onRemoveButtonClick,\n    removeButtonAriaLabel,\n  }: RowProps<T>) => {\n    const i18n = useInternalI18n('attribute-editor');\n\n    const handleRemoveClick = useCallback(() => {\n      fireNonCancelableEvent(onRemoveButtonClick, { itemIndex: index });\n    }, [onRemoveButtonClick, index]);\n\n    const firstControlId = useUniqueId('first-control-id-');\n\n    const buttonRef = (ref: ButtonProps.Ref | null) => {\n      removeButtonRefs[index] = ref ?? undefined;\n    };\n\n    let gridColumnStart = 1;\n    let gridColumnEnd = 1;\n    const removeButtonOnSameLine = isRemoveButtonOnSameLine(layout);\n\n    const customActions = customRowActions?.({\n      item,\n      itemIndex: index,\n      ref: buttonRef,\n      breakpoint,\n      ownRow: !removeButtonOnSameLine,\n    });\n\n    return (\n      <div\n        className={clsx(styles.row, layout.rows.length === 1 && styles['single-row'])}\n        role=\"group\"\n        aria-labelledby={`${firstControlId}-label ${firstControlId}`}\n      >\n        {definition.map(({ info, label, constraintText, errorText, warningText, control }, defIndex) => {\n          ({ gridColumnStart, gridColumnEnd } = getItemGridColumns(layout, defIndex));\n          return (\n            <InternalFormField\n              key={defIndex}\n              className={styles.field}\n              __style={{ gridColumnStart, gridColumnEnd }}\n              label={label}\n              info={info}\n              constraintText={render(item, index, constraintText)}\n              errorText={render(item, index, errorText)}\n              warningText={render(item, index, warningText)}\n              stretch={true}\n              i18nStrings={{\n                errorIconAriaLabel: i18nStrings.errorIconAriaLabel,\n                warningIconAriaLabel: i18nStrings.warningIconAriaLabel,\n              }}\n              __hideLabel={index !== 0 && removeButtonOnSameLine}\n              controlId={defIndex === 0 ? firstControlId : undefined}\n            >\n              {render(item, index, control)}\n            </InternalFormField>\n          );\n        })}\n        <div\n          className={clsx(styles['remove-button-container'], {\n            [styles['remove-button-field-padding']]: removeButtonOnSameLine && index === 0,\n            [styles['remove-button-own-row']]: !removeButtonOnSameLine,\n          })}\n          style={{ ...getRemoveButtonGridColumns(layout, gridColumnEnd) }}\n        >\n          {removable &&\n            (customActions !== undefined ? (\n              customActions\n            ) : (\n              <InternalButton\n                className={styles['remove-button']}\n                formAction=\"none\"\n                ref={buttonRef}\n                ariaLabel={(removeButtonAriaLabel ?? i18nStrings.removeButtonAriaLabel)?.(item)}\n                onClick={handleRemoveClick}\n              >\n                {i18n('removeButtonText', removeButtonText)}\n              </InternalButton>\n            ))}\n        </div>\n        {!removeButtonOnSameLine && <div className={styles.divider} />}\n      </div>\n    );\n  }\n) as <T>(props: RowProps<T>) => JSX.Element;\n"]}