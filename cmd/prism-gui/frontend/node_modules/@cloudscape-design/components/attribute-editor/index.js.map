{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/attribute-editor/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,YAAY,CAAC;;AACb,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AAExE,OAAO,uBAAuB,MAAM,YAAY,CAAC;AAEjD,MAAM,eAAe,GAAG,KAAK,CAAC,UAAU,CACtC,CACE,EAA4G,EAC5G,GAAwC,EACxC,EAAE;;QAFF,EAAE,KAAK,GAAG,EAAE,EAAE,gBAAgB,GAAG,QAAQ,EAAE,eAAe,GAAG,GAAG,EAAE,CAAC,IAAI,OAAqC,EAAhC,KAAK,cAAjF,gDAAmF,CAAF;IAGjF,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,iBAAiB,EAAE;QAC7D,KAAK,EAAE;YACL,gBAAgB,EAAE,gBAAgB;SACnC;QACD,QAAQ,EAAE;YACR,eAAe,EAAE,MAAA,MAAA,KAAK,CAAC,UAAU,0CAAE,MAAM,mCAAI,IAAI;YACjD,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU;YACjC,mBAAmB,EAAE,CAAC,CAAC,KAAK,CAAC,gBAAgB;SAC9C;KACF,CAAC,CAAC;IACH,OAAO,CACL,oBAAC,uBAAuB,kBACtB,KAAK,EAAE,KAAK,EACZ,eAAe,EAAE,eAAe,EAChC,gBAAgB,EAAE,gBAAgB,IAC9B,KAAK,EACL,kBAAkB,IACtB,GAAG,EAAE,GAAG,IACR,CACH,CAAC;AACJ,CAAC,CAC+B,CAAC;AAEnC,gBAAgB,CAAC,eAAe,EAAE,iBAAiB,CAAC,CAAC;AAGrD,eAAe,eAAe,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n'use client';\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { AttributeEditorForwardRefType, AttributeEditorProps } from './interfaces';\nimport InternalAttributeEditor from './internal';\n\nconst AttributeEditor = React.forwardRef(\n  <T,>(\n    { items = [], addButtonVariant = 'normal', isItemRemovable = () => true, ...props }: AttributeEditorProps<T>,\n    ref: React.Ref<AttributeEditorProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('AttributeEditor', {\n      props: {\n        addButtonVariant: addButtonVariant,\n      },\n      metadata: {\n        definitionItems: props.definition?.length ?? null,\n        hasGridLayout: !!props.gridLayout,\n        hasCustomRowActions: !!props.customRowActions,\n      },\n    });\n    return (\n      <InternalAttributeEditor\n        items={items}\n        isItemRemovable={isItemRemovable}\n        addButtonVariant={addButtonVariant}\n        {...props}\n        {...baseComponentProps}\n        ref={ref}\n      />\n    );\n  }\n) as AttributeEditorForwardRefType;\n\napplyDisplayName(AttributeEditor, 'AttributeEditor');\n\nexport { AttributeEditorProps };\nexport default AttributeEditor;\n"]}