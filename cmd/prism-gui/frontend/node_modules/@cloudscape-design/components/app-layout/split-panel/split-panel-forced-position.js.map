{"version":3,"file":"split-panel-forced-position.js","sourceRoot":"","sources":["../../../../src/app-layout/split-panel/split-panel-forced-position.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,oBAAoB,EAAE,MAAM,6CAA6C,CAAC;AACnF,OAAO,EAAE,qBAAqB,EAAE,MAAM,aAAa,CAAC;AAEpD;;;;;;;;;GASG;AAEH,SAAS,4BAA4B;IACnC,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,wCAAwC;IAC9D,OAAO,CAAC,2BAAmC,EAAE,EAAE;QAC7C,MAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,qBAAqB,GAAG,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,qBAAqB,CAAC;QACzG,QAAQ,GAAG,2BAA2B,GAAG,QAAQ,CAAC;QAClD,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,mBAAmB,GAAG,4BAA4B,EAAE,CAAC;AAE3D,MAAM,UAAU,gCAAgC,CAAC,EAC/C,QAAQ,EACR,2BAA2B,GAI5B;IACC,IAAI,QAAQ,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,OAAO,mBAAmB,CAAC,2BAA2B,CAAC,CAAC;AAC1D,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { browserScrollbarSize } from '../../internal/utils/browser-scrollbar-size';\nimport { SPLIT_PANEL_MIN_WIDTH } from './constants';\n\n/**\n * Even if the Split Panel is set to be displayed on the side, it will be forced to the bottom\n * if the available space is less than 280px.\n *\n * We also have to account for the fact that after the split panel changes its position\n * from bottom to side or vice versa, there is a chance that the content  a scrollbar appears or disappears from the page,\n * which changes the available space again. This could potentially lead to an infinite loop.\n * To prevent that, we give the split panel some \"resistance\" to change from bottom to side\n * (but not from side to bottom), requiring in this case some extra space on top of the \"nominal\" 280px.\n */\n\nfunction checkBasedOnPreviousPosition() {\n  let isForced = false; // Remember position for the next render\n  return (availableWidthForSplitPanel: number) => {\n    const minWidth = isForced ? SPLIT_PANEL_MIN_WIDTH + browserScrollbarSize().width : SPLIT_PANEL_MIN_WIDTH;\n    isForced = availableWidthForSplitPanel < minWidth;\n    return isForced;\n  };\n}\n\nconst checkForcedPosition = checkBasedOnPreviousPosition();\n\nexport function shouldSplitPanelBeForcedToBottom({\n  isMobile,\n  availableWidthForSplitPanel,\n}: {\n  isMobile: boolean;\n  availableWidthForSplitPanel: number;\n}) {\n  if (isMobile) {\n    return true;\n  }\n\n  return checkForcedPosition(availableWidthForSplitPanel);\n}\n"]}