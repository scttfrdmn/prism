{"version":3,"file":"props-merger.js","sourceRoot":"","sources":["../../../../../src/app-layout/visual-refresh-toolbar/state/props-merger.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\n\nimport { AppLayoutInternalProps, AppLayoutPendingState } from '../interfaces';\nimport { ToolbarProps } from '../toolbar';\nimport { MergeProps, SharedProps } from './interfaces';\n\nfunction checkAlreadyExists(value: boolean, propName: string) {\n  if (value) {\n    warnOnce(\n      'AppLayout',\n      `Another app layout instance on this page already defines ${propName} property. This instance will be ignored.`\n    );\n    return true;\n  }\n  return false;\n}\n\nexport const mergeProps: MergeProps = (ownProps, additionalProps) => {\n  const toolbar: ToolbarProps = {};\n  for (const props of [ownProps, ...additionalProps]) {\n    toolbar.ariaLabels = { ...toolbar.ariaLabels, ...props.ariaLabels };\n    if (\n      props.drawers &&\n      props.drawers.some(drawer => drawer.trigger) &&\n      !checkAlreadyExists(!!toolbar.drawers, 'tools or drawers')\n    ) {\n      toolbar.drawers = props.drawers;\n      toolbar.activeDrawerId = props.activeDrawerId;\n      toolbar.drawersFocusRef = props.drawersFocusRef;\n      toolbar.onActiveDrawerChange = props.onActiveDrawerChange;\n    }\n    if (props.globalDrawers && !checkAlreadyExists(!!toolbar.globalDrawers, 'globalDrawers')) {\n      toolbar.globalDrawersFocusControl = props.globalDrawersFocusControl;\n      toolbar.globalDrawers = props.globalDrawers;\n      toolbar.activeGlobalDrawersIds = props.activeGlobalDrawersIds;\n      toolbar.onActiveGlobalDrawersChange = props.onActiveGlobalDrawersChange;\n    }\n    if (\n      props.aiDrawer &&\n      props.aiDrawerFocusRef &&\n      !checkAlreadyExists(!!toolbar.aiDrawerFocusRef, 'aiDrawerFocusRef')\n    ) {\n      toolbar.aiDrawerFocusRef = props.aiDrawerFocusRef;\n    }\n    if (props.navigation && !checkAlreadyExists(!!toolbar.hasNavigation, 'navigation')) {\n      toolbar.hasNavigation = true;\n      toolbar.navigationOpen = props.navigationOpen;\n      toolbar.navigationFocusRef = props.navigationFocusRef;\n      toolbar.onNavigationToggle = props.onNavigationToggle;\n    }\n    if (\n      props.splitPanel &&\n      props.splitPanelToggleProps?.displayed &&\n      !checkAlreadyExists(!!toolbar.hasSplitPanel, 'splitPanel')\n    ) {\n      toolbar.hasSplitPanel = true;\n      toolbar.splitPanelFocusRef = props.splitPanelFocusRef;\n      toolbar.splitPanelToggleProps = props.splitPanelToggleProps;\n      toolbar.onSplitPanelToggle = props.onSplitPanelToggle;\n    }\n    if (props.breadcrumbs && !checkAlreadyExists(!!toolbar.hasBreadcrumbsPortal, 'hasBreadcrumbsPortal')) {\n      toolbar.hasBreadcrumbsPortal = true;\n    }\n    if (props.expandedDrawerId && !checkAlreadyExists(!!toolbar.expandedDrawerId, 'expandedDrawerId')) {\n      toolbar.expandedDrawerId = props.expandedDrawerId;\n      toolbar.setExpandedDrawerId = props.setExpandedDrawerId;\n    }\n  }\n  // do not render toolbar if no fields are defined, except ariaLabels, which are always there\n  return Object.keys(toolbar).filter(key => key !== 'ariaLabels').length > 0 ? toolbar : null;\n};\n\nexport const getPropsToMerge = (props: AppLayoutInternalProps, appLayoutState: AppLayoutPendingState): SharedProps => {\n  const state = appLayoutState.widgetizedState;\n  return {\n    breadcrumbs: props.breadcrumbs,\n    ariaLabels: state ? state.ariaLabels : props.ariaLabels,\n    navigation: !props.navigationTriggerHide && !props.navigationHide,\n    navigationOpen: state ? state.navigationOpen : props.navigationOpen,\n    onNavigationToggle: state?.onNavigationToggle,\n    navigationFocusRef: state?.navigationFocusControl.refs.toggle,\n    activeDrawerId: state?.activeDrawer?.id ?? null,\n    // only pass it down if there are non-empty drawers or tools\n    drawers: state?.drawers?.length || !props.toolsHide ? state?.drawers : undefined,\n    globalDrawersFocusControl: state?.globalDrawersFocusControl,\n    globalDrawers: state?.globalDrawers?.length ? state.globalDrawers : undefined,\n    activeGlobalDrawersIds: state?.activeGlobalDrawersIds,\n    onActiveGlobalDrawersChange: state?.onActiveGlobalDrawersChange,\n    onActiveDrawerChange: state?.onActiveDrawerChange,\n    drawersFocusRef: state?.drawersFocusControl.refs.toggle,\n    splitPanel: props.splitPanel,\n    splitPanelToggleProps: state?.splitPanelToggleConfig && {\n      ...state.splitPanelToggleConfig,\n      active: state?.splitPanelOpen,\n      controlId: state?.splitPanelControlId,\n      position: state?.splitPanelPosition,\n    },\n    splitPanelFocusRef: state?.splitPanelFocusControl.refs.toggle,\n    onSplitPanelToggle: state?.onSplitPanelToggle,\n    expandedDrawerId: state?.expandedDrawerId,\n    setExpandedDrawerId: state?.setExpandedDrawerId,\n    aiDrawer: state?.aiDrawer ?? undefined,\n    aiDrawerFocusRef: state?.aiDrawerFocusControl?.refs?.toggle,\n  };\n};\n"]}