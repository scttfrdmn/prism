{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/app-layout/visual-refresh-toolbar/skeleton/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,OAAO,EAAE,6BAA6B,EAAE,MAAM,kEAAkE,CAAC;AAGjH,OAAO,aAAa,MAAM,6CAA6C,CAAC;AACxE,OAAO,cAAc,MAAM,mDAAmD,CAAC;AAE/E,OAAO,EACL,sBAAsB,EACtB,uBAAuB,EACvB,0BAA0B,EAC1B,uBAAuB,GACxB,MAAM,aAAa,CAAC;AAIrB,OAAO,cAAc,MAAM,kCAAkC,CAAC;AAC9D,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAUrC,MAAM,0BAA0B,GAAwD;IACtF,IAAI,EAAE,wBAAwB;IAC9B,KAAK,EAAE;QACL,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE,MAAM;KACb;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,UAAU,EACV,cAAc,EACd,cAAc,EACd,YAAY,EACZ,uBAAuB,GACH,EAAE,EAAE;;IACxB,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,cAAc,CAAC;IACnE,MAAM,WAAW,GAAsB;QACrC,YAAY;QACZ,cAAc;QACd,cAAc;KACf,CAAC;IACF,MAAM,EACJ,mBAAmB,EACnB,gBAAgB,EAChB,0BAA0B,EAC1B,yBAAyB,EACzB,mBAAmB,GACpB,GAAG,uBAAuB,CAAC;IAE5B,OAAO,CACL,oBAAC,aAAa,IAAC,WAAW,EAAC,oBAAoB;QAC7C,6CACM,6BAA6B,CAAC,EAAE,SAAS,EAAE,0BAA0B,EAAE,CAAC,IAC5E,GAAG,EAAE,cAAc,CAAC,OAAoC,yCACnB,KAAK,IACtC,mBAAmB,IACvB,SAAS,EAAE,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,SAAS,mCAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,EACnF,KAAK,EACH,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,KAAK,mCAAI;gBAC5B,SAAS,EAAE,gBAAgB,cAAc,CAAC,SAAS,CAAC,eAAe,GAAG,cAAc,CAAC,SAAS,CAAC,aAAa,KAAK;gBACjH,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE,GAAG,eAAe,IAAI;aACzD;YAGH,oBAAC,uBAAuB,oBAAK,WAAW,EAAI;YAC5C,8CAAU,gBAAgB,IAAE,SAAS,EAAE,MAAA,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAE,SAAS,mCAAI,MAAM,CAAC,eAAe,CAAC;gBAC3F,oBAAC,uBAAuB,oBAAK,WAAW,EAAI;gBAC5C,6CACM,0BAA0B,IAC9B,SAAS,EACP,MAAA,0BAA0B,aAA1B,0BAA0B,uBAA1B,0BAA0B,CAAE,SAAS,mCACrC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC,EAAE,cAAc,CAAC,sBAAsB,EAAE,CAAC;oBAGhG,aAAa,IAAI,6CAAS,yBAAyB,GAAG,aAAa,CAAO;oBAE3E,6CAAS,mBAAmB,IAAE,SAAS,EAAE,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,SAAS,mCAAI,cAAc,CAAC,OAAO,KAC9F,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CACxB,CACF;gBACN,oBAAC,0BAA0B,oBAAK,WAAW,EAAI,CAC1C;YACP,oBAAC,sBAAsB,oBAAK,WAAW,EAAI,CACvC,CACQ,CACjB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\n\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { GeneratedAnalyticsMetadataAppLayoutToolbarComponent } from '../../../app-layout-toolbar/analytics-metadata/interfaces';\nimport VisualContext from '../../../internal/components/visual-context';\nimport customCssProps from '../../../internal/generated/custom-css-properties';\nimport { AppLayoutInternalProps, AppLayoutPendingState } from '../interfaces';\nimport {\n  AppLayoutAfterMainSlot,\n  AppLayoutBeforeMainSlot,\n  AppLayoutBottomContentSlot,\n  AppLayoutTopContentSlot,\n} from '../internal';\nimport { ToolbarProps } from '../toolbar';\nimport { SkeletonPartProps, SkeletonSlotsAttributes } from './interfaces';\n\nimport testutilStyles from '../../test-classes/styles.css.js';\nimport styles from './styles.css.js';\n\nexport interface SkeletonLayoutProps {\n  registered: boolean;\n  appLayoutProps: AppLayoutInternalProps;\n  appLayoutState: AppLayoutPendingState;\n  toolbarProps: ToolbarProps | null;\n  skeletonSlotsAttributes: SkeletonSlotsAttributes;\n}\n\nconst componentAnalyticsMetadata: GeneratedAnalyticsMetadataAppLayoutToolbarComponent = {\n  name: 'awsui.AppLayoutToolbar',\n  label: {\n    selector: 'h1',\n    root: 'body',\n  },\n};\n\nexport const SkeletonLayout = ({\n  registered,\n  appLayoutProps,\n  appLayoutState,\n  toolbarProps,\n  skeletonSlotsAttributes,\n}: SkeletonLayoutProps) => {\n  const { contentHeader, content, navigationWidth } = appLayoutProps;\n  const mergedProps: SkeletonPartProps = {\n    toolbarProps,\n    appLayoutProps,\n    appLayoutState,\n  };\n  const {\n    wrapperElAttributes,\n    mainElAttributes,\n    contentWrapperElAttributes,\n    contentHeaderElAttributes,\n    contentElAttributes,\n  } = skeletonSlotsAttributes;\n\n  return (\n    <VisualContext contextName=\"app-layout-toolbar\">\n      <div\n        {...getAnalyticsMetadataAttribute({ component: componentAnalyticsMetadata })}\n        ref={appLayoutState.rootRef as React.Ref<HTMLDivElement>}\n        data-awsui-app-layout-widget-loaded={false}\n        {...wrapperElAttributes}\n        className={wrapperElAttributes?.className ?? clsx(styles.root, testutilStyles.root)}\n        style={\n          wrapperElAttributes?.style ?? {\n            blockSize: `calc(100vh - ${appLayoutProps.placement.insetBlockStart + appLayoutProps.placement.insetBlockEnd}px)`,\n            [customCssProps.navigationWidth]: `${navigationWidth}px`,\n          }\n        }\n      >\n        <AppLayoutBeforeMainSlot {...mergedProps} />\n        <main {...mainElAttributes} className={mainElAttributes?.className ?? styles['main-landmark']}>\n          <AppLayoutTopContentSlot {...mergedProps} />\n          <div\n            {...contentWrapperElAttributes}\n            className={\n              contentWrapperElAttributes?.className ??\n              clsx(styles.main, { [styles['main-disable-paddings']]: appLayoutProps.disableContentPaddings })\n            }\n          >\n            {contentHeader && <div {...contentHeaderElAttributes}>{contentHeader}</div>}\n            {/*delay rendering the content until registration of this instance is complete*/}\n            <div {...contentElAttributes} className={contentElAttributes?.className ?? testutilStyles.content}>\n              {registered ? content : null}\n            </div>\n          </div>\n          <AppLayoutBottomContentSlot {...mergedProps} />\n        </main>\n        <AppLayoutAfterMainSlot {...mergedProps} />\n      </div>\n    </VisualContext>\n  );\n};\n"]}