name: "Desktop Research Environment"
description: "Ubuntu Desktop with NICE DCV, common research tools, and GUI applications"
base: "ubuntu-22.04-server-lts"
architecture: "x86_64"  # Default architecture, will be overridden during build

build_steps:
  - name: Update system packages
    script: |
      apt-get update
      apt-get upgrade -y
    timeout_seconds: 300
    
  - name: Install desktop environment
    script: |
      DEBIAN_FRONTEND=noninteractive apt-get install -y \
        ubuntu-desktop xfce4 xfce4-terminal \
        firefox libreoffice \
        build-essential git curl wget \
        htop tmux vim
    timeout_seconds: 1800
    
  - name: Install NICE DCV server
    script: |
      # Add NICE DCV GPG key
      wget -O - https://d1uj6qtbmh3dt5.cloudfront.net/NICE-GPG-KEY | gpg --import
      
      # Download and install NICE DCV Server
      cd /tmp
      wget https://d1uj6qtbmh3dt5.cloudfront.net/nice-dcv-ubuntu2204-x86_64.tgz
      tar -xvzf nice-dcv-ubuntu2204-x86_64.tgz
      cd nice-dcv-*-ubuntu2204-x86_64
      
      # Install DCV server and required packages
      DEBIAN_FRONTEND=noninteractive apt-get install -y ./nice-dcv-server_*.deb
      DEBIAN_FRONTEND=noninteractive apt-get install -y ./nice-xdcv_*.deb
      
      # Clean up
      cd /tmp
      rm -rf nice-dcv-*
      
      # Configure DCV server
      systemctl enable dcvserver
      
      # Configure DCV to work with Ubuntu desktop
      cat > /etc/dcv/dcv.conf << 'EOF'
      [license]
      [session-management]
      create-session = true
      [session-management/automatic-console-session]
      owner = "ubuntu"
      max-concurrent-clients = 4
      [connectivity]
      web-port = 8443
      enable-quic-frontend = true
      [security]
      authentication = "system"
      [display]
      enable-quality-adaptation = true
      quality = "best"
      EOF
    timeout_seconds: 1800
    
  - name: Setup DCV permissions
    script: |
      # Setup user permissions for DCV
      usermod -aG video dcv
      
      # Configure automatic X session for console user
      cat > /etc/X11/Xwrapper.config << 'EOF'
      allowed_users=anybody
      needs_root_rights=yes
      EOF
      
      # Configure XDCV
      systemctl enable xdcv
      
      # Start DCV server
      systemctl start dcvserver
    timeout_seconds: 300
    
  - name: Install additional desktop tools
    script: |
      DEBIAN_FRONTEND=noninteractive apt-get install -y \
        gnome-terminal gedit nautilus \
        gnome-system-monitor gnome-calculator \
        dconf-editor gnome-tweaks \
        gdebi gparted synaptic \
        vlc gimp inkscape \
        ubuntu-wallpapers
    timeout_seconds: 900
    
  - name: Install Python and data science tools
    script: |
      # Install Python
      apt-get install -y python3 python3-pip python3-venv
      
      # Install core Python packages
      pip3 install --upgrade pip
      pip3 install numpy pandas matplotlib seaborn scikit-learn jupyter jupyterlab ipython
      
      # Install Visual Studio Code
      apt-get install -y apt-transport-https
      wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | apt-key add -
      add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main"
      apt-get update
      apt-get install -y code
    timeout_seconds: 1200
    
  - name: Configure desktop environment
    script: |
      # Create a more research-friendly desktop environment
      mkdir -p /etc/skel/.config
      
      # Create desktop shortcut for Jupyter
      mkdir -p /etc/skel/Desktop
      cat > /etc/skel/Desktop/jupyter.desktop << 'EOF'
      [Desktop Entry]
      Name=Jupyter Lab
      Exec=bash -c "jupyter lab"
      Terminal=true
      Type=Application
      Icon=jupyter
      Categories=Development;
      EOF
      chmod +x /etc/skel/Desktop/jupyter.desktop
      
      # Create desktop shortcut for VS Code
      cat > /etc/skel/Desktop/vscode.desktop << 'EOF'
      [Desktop Entry]
      Name=Visual Studio Code
      Exec=/usr/bin/code
      Terminal=false
      Type=Application
      Icon=code
      Categories=Development;
      EOF
      chmod +x /etc/skel/Desktop/vscode.desktop
    timeout_seconds: 300
    
  - name: Configure system for better remote desktop experience
    script: |
      # Disable screen locking
      mkdir -p /etc/skel/.config/autostart
      cat > /etc/skel/.config/autostart/disable-screensaver.desktop << 'EOF'
      [Desktop Entry]
      Type=Application
      Name=Disable Screen Locking
      Exec=gsettings set org.gnome.desktop.screensaver lock-enabled false
      NoDisplay=true
      X-GNOME-Autostart-enabled=true
      EOF
      chmod +x /etc/skel/.config/autostart/disable-screensaver.desktop
      
      # Optimize NICE DCV for performance
      cat >> /etc/dcv/dcv.conf << 'EOF'
      [connectivity]
      enable-image-compression = true
      image-quality = 80
      jpeg-quality = 80
      [display]
      web-client-max-head-resolution = 1920x1080@60
      web-client-preferred-color-depth = 16
      EOF
    timeout_seconds: 300
    
  - name: Setup user environment
    script: |
      # Create default bashrc additions for all users
      cat > /etc/skel/.desktop_additions << 'EOF'
      # Aliases for desktop environment
      alias start-jupyter='jupyter lab &'
      alias code='code . &'
      
      # Set DISPLAY for X applications
      export DISPLAY=:0
      
      # Add Jupyter and VS Code to PATH
      export PATH="$HOME/.local/bin:$PATH"
      EOF
      
      # Append to any existing users' .bashrc files
      for user_home in /home/*; do
        if [ -d "$user_home" ]; then
          cat /etc/skel/.desktop_additions >> "$user_home/.bashrc"
        fi
      done
    timeout_seconds: 300

validation:
  - name: Verify desktop environment
    script: |
      dpkg -l | grep ubuntu-desktop
      dpkg -l | grep xfce4
    
  - name: Verify NICE DCV installation
    script: systemctl status dcvserver | grep "active (running)"
    
  - name: Verify NICE DCV web access
    script: |
      netstat -tuln | grep 8443
      dcv list-sessions
    
  - name: Verify Python installation
    script: |
      python3 --version
      pip3 list | grep -E '(numpy|pandas|matplotlib|scikit-learn|jupyter)'
    
  - name: Verify VS Code installation
    script: code --version