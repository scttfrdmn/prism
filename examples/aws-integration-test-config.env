# CloudWorkstation AWS Integration Test Configuration
# Copy this file and customize for your testing environment

# ============================================================================
# Required Configuration
# ============================================================================

# Enable AWS integration tests (REQUIRED)
RUN_AWS_TESTS=true

# AWS profile for test account (REQUIRED)
# Must be configured with valid AWS credentials
AWS_PROFILE=aws

# ============================================================================
# AWS Configuration
# ============================================================================

# AWS region for testing (default: us-east-1)
# Choose region closest to you for faster tests
AWS_TEST_REGION=us-east-1

# Alternative regions for testing
# AWS_TEST_REGION=us-west-2
# AWS_TEST_REGION=eu-west-1

# ============================================================================
# Test Execution Settings
# ============================================================================

# Test timeout in minutes (default: 10)
# Instance lifecycle tests can take 8-12 minutes
AWS_TEST_TIMEOUT=15

# CloudWorkstation daemon URL (default: http://localhost:8947)
DAEMON_URL=http://localhost:8947

# Test resource prefix (default: cwstest)
# Useful for identifying test resources in AWS console
AWS_TEST_PREFIX=cwstest

# ============================================================================
# Cost Protection Settings
# ============================================================================

# Maximum concurrent instances (default: 5)
# Higher values increase test parallelism but also costs
AWS_TEST_MAX_INSTANCES=3

# Maximum concurrent volumes (default: 3)
# Includes both EFS and EBS volumes
AWS_TEST_MAX_VOLUMES=2

# Maximum hourly spend limit in USD (default: 5.00)
# Conservative estimate to prevent runaway costs
AWS_TEST_MAX_HOURLY_COST=3.00

# ============================================================================
# Advanced Configuration
# ============================================================================

# Development mode (avoids keychain prompts in CI)
CLOUDWORKSTATION_DEV=true

# Go test environment
GO_ENV=test

# Specific test patterns (for debugging)
# Uncomment to run only specific tests
# AWS_TEST_PATTERN=TestAWSInstanceLifecycle
# AWS_TEST_PATTERN=TestAWSTemplate
# AWS_TEST_PATTERN=TestAWSStorage

# ============================================================================
# Usage Instructions
# ============================================================================

# 1. Copy this file to your local environment:
#    cp examples/aws-integration-test-config.env .env

# 2. Customize the configuration values above

# 3. Source the configuration:
#    source .env

# 4. Run tests:
#    make test-aws-quick    # Quick subset of tests
#    make test-aws          # Full test suite
#    make test-aws-setup    # Validate environment

# ============================================================================
# Cost Estimation
# ============================================================================

# Estimated costs per hour (us-east-1 region):
# - t3.nano instance: $0.0052/hour
# - t3.micro instance: $0.0104/hour  
# - EFS volume: ~$0.30/month per GB
# - EBS gp3 volume: ~$0.08/month per GB

# Example cost calculation for max settings:
# 3 instances * $0.0104/hour = $0.0312/hour
# 2 volumes * $0.003/hour = $0.006/hour  
# Total: ~$0.04/hour

# Full test suite duration: ~15 minutes
# Estimated cost per test run: ~$0.01

# ============================================================================
# Security Notes
# ============================================================================

# - Use dedicated test AWS account (recommended)
# - Configure minimal IAM permissions required
# - Never use production AWS credentials
# - Monitor test account costs regularly
# - Set up AWS budget alerts for test account

# Required IAM permissions:
# - ec2:* (for instance management)
# - efs:* (for EFS volume management)
# - iam:PassRole (for EC2 instance profiles)
# - sts:GetCallerIdentity (for credential validation)

# ============================================================================
# Troubleshooting
# ============================================================================

# Common issues and solutions:

# Issue: "AWS tests disabled"
# Solution: Ensure RUN_AWS_TESTS=true

# Issue: "Failed to load AWS config"
# Solution: Check AWS profile configuration
#   aws configure list --profile aws
#   aws sts get-caller-identity --profile aws

# Issue: "CloudWorkstation daemon not running"
# Solution: Start the daemon
#   ./bin/cwsd &

# Issue: "Cost limit exceeded"
# Solution: Increase limits or reduce resource usage
#   AWS_TEST_MAX_HOURLY_COST=10.00

# Issue: "Timeout waiting for instance"
# Solution: Increase timeout or check AWS limits
#   AWS_TEST_TIMEOUT=20

# ============================================================================
# Example Workflows
# ============================================================================

# Development workflow:
# 1. source examples/aws-integration-test-config.env
# 2. make test-aws-setup
# 3. make test-aws-quick
# 4. # Make code changes
# 5. make test-aws-quick  # Test changes

# CI/CD workflow:
# 1. Configure secrets in GitHub Actions
# 2. Use workflow_dispatch for manual testing
# 3. Monitor costs in AWS billing dashboard

# Debugging workflow:
# 1. Set specific test pattern: AWS_TEST_PATTERN=TestAWSSpecific
# 2. Run with verbose output: go test -v -tags=aws_integration ./internal/cli/ -run $AWS_TEST_PATTERN
# 3. Check AWS console for resource states